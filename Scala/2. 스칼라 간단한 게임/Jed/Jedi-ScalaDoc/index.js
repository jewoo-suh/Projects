Index.PACKAGES = {"Commands" : [{"name" : "Commands.Command", "object" : "Commands\/Command$.html", "members_object" : [{"label" : "StateChangeHistory", "tail" : "", "member" : "Commands.Command.StateChangeHistory", "link" : "Commands\/Command$.html#StateChangeHistory[T]extendsNotifier[(Int,Int)]", "kind" : "class"}, {"label" : "transaction", "tail" : "(cmds: Iterable[Command[T]]): Command[T]", "member" : "Commands.Command.transaction", "link" : "Commands\/Command$.html#transaction[T](cmds:Iterable[Commands.Command[T]]):Commands.Command[T]", "kind" : "def"}, {"label" : "doNothing", "tail" : "(): Command[T]", "member" : "Commands.Command.doNothing", "link" : "Commands\/Command$.html#doNothing[T]:Commands.Command[T]", "kind" : "def"}, {"label" : "orElse", "tail" : "(c1: Command[T], c2: Command[T]): Command[T]", "member" : "Commands.Command.orElse", "link" : "Commands\/Command$.html#orElse[T](c1:Commands.Command[T],c2:Commands.Command[T]):Commands.Command[T]", "kind" : "def"}, {"label" : "andThen", "tail" : "(c1: Command[T], c2: Command[T]): Command[T]", "member" : "Commands.Command.andThen", "link" : "Commands\/Command$.html#andThen[T](c1:Commands.Command[T],c2:Commands.Command[T]):Commands.Command[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Commands\/Command$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Commands\/Command$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Commands\/Command$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Commands\/Command$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Commands\/Command$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Commands\/Command$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/Command$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/Command$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/Command$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Commands\/Command$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Commands\/Command$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Commands\/Command$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Commands\/Command$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Commands\/Command$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Commands\/Command$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Commands\/Command$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Commands\/Command$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Commands\/Command$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Commands\/Command$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "Commands\/Command.html", "kind" : "trait", "members_trait" : [{"label" : "|||", "tail" : "(that: Command[T]): Command[T]", "member" : "Commands.Command.|||", "link" : "Commands\/Command.html#|||(that:Commands.Command[T]):Commands.Command[T]", "kind" : "def"}, {"label" : "&&&", "tail" : "(that: Command[T]): Command[T]", "member" : "Commands.Command.&&&", "link" : "Commands\/Command.html#&&&(that:Commands.Command[T]):Commands.Command[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Commands\/Command.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Commands\/Command.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Commands\/Command.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Commands\/Command.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Commands\/Command.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Commands\/Command.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/Command.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/Command.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/Command.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Commands\/Command.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Commands\/Command.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Commands\/Command.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Commands\/Command.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Commands\/Command.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Commands\/Command.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Commands\/Command.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Commands\/Command.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Commands\/Command.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Commands\/Command.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "DO", "tail" : "(target: T): Option[StateChange]", "member" : "Commands.Command.DO", "link" : "Commands\/Command.html#DO(target:T):Option[Commands.StateChange]", "kind" : "abstract def"}], "shortDescription" : "    Suppose a (mutable) object target: T is in state s."}, {"name" : "Commands.StateChange", "object" : "Commands\/StateChange$.html", "members_object" : [{"label" : "compose", "tail" : "(u1: StateChange, u2: StateChange): StateChange", "member" : "Commands.StateChange.compose", "link" : "Commands\/StateChange$.html#compose(u1:Commands.StateChange,u2:Commands.StateChange):Commands.StateChange", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Commands\/StateChange$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Commands\/StateChange$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Commands\/StateChange$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Commands\/StateChange$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Commands\/StateChange$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Commands\/StateChange$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/StateChange$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/StateChange$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/StateChange$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Commands\/StateChange$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Commands\/StateChange$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Commands\/StateChange$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Commands\/StateChange$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Commands\/StateChange$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Commands\/StateChange$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Commands\/StateChange$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Commands\/StateChange$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Commands\/StateChange$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Commands\/StateChange$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "Commands\/StateChange.html", "kind" : "trait", "members_trait" : [{"label" : "kind", "tail" : ": String", "member" : "Commands.StateChange.kind", "link" : "Commands\/StateChange.html#kind:String", "kind" : "val"}, {"label" : "merge", "tail" : "(next: StateChange): Option[StateChange]", "member" : "Commands.StateChange.merge", "link" : "Commands\/StateChange.html#merge(next:Commands.StateChange):Option[Commands.StateChange]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Commands\/StateChange.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Commands\/StateChange.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Commands\/StateChange.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Commands\/StateChange.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Commands\/StateChange.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Commands\/StateChange.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/StateChange.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/StateChange.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Commands\/StateChange.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Commands\/StateChange.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Commands\/StateChange.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Commands\/StateChange.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Commands\/StateChange.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Commands\/StateChange.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Commands\/StateChange.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Commands\/StateChange.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Commands\/StateChange.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Commands\/StateChange.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Commands\/StateChange.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "redo", "tail" : "(): Unit", "member" : "Commands.StateChange.redo", "link" : "Commands\/StateChange.html#redo():Unit", "kind" : "abstract def"}, {"label" : "undo", "tail" : "(): Unit", "member" : "Commands.StateChange.undo", "link" : "Commands\/StateChange.html#undo():Unit", "kind" : "abstract def"}], "shortDescription" : "     A StateChange captures the state of a target on which a     Command has just been DOd successfully."}], "Jed" : [{"name" : "Jed.CutRing", "shortDescription" : " The CutRing keeps the most recent cuts\/deletions from editing sessions that have installed the CutRing.Plugin trait.", "object" : "Jed\/CutRing$.html", "members_object" : [{"label" : "ringChanged", "tail" : ": Notifier[Unit]", "member" : "Jed.CutRing.ringChanged", "link" : "Jed\/CutRing$.html#ringChanged:Red.Notifier[Unit]", "kind" : "val"}, {"label" : "toText", "tail" : "(): String", "member" : "Jed.CutRing.toText", "link" : "Jed\/CutRing$.html#toText:String", "kind" : "def"}, {"label" : "addCut", "tail" : "(aCut: Cut): Unit", "member" : "Jed.CutRing.addCut", "link" : "Jed\/CutRing$.html#addCut(aCut:Red.Cut):Unit", "kind" : "def"}, {"label" : "TimeStamped", "tail" : "", "member" : "Jed.CutRing.TimeStamped", "link" : "Jed\/CutRing$.html#TimeStampedextendsProductwithSerializable", "kind" : "case class"}, {"label" : "emptyCut", "tail" : "(): Cut", "member" : "Jed.CutRing.emptyCut", "link" : "Jed\/CutRing$.html#emptyCut:Red.Cut", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "Jed.CutRing.length", "link" : "Jed\/CutRing$.html#length:Int", "kind" : "def"}, {"label" : "bound", "tail" : ": Int", "member" : "Jed.CutRing.bound", "link" : "Jed\/CutRing$.html#bound:Int", "kind" : "var"}, {"label" : "Plugin", "tail" : "", "member" : "Jed.CutRing.Plugin", "link" : "Jed\/CutRing$.html#PluginextendsEditSession", "kind" : "trait"}, {"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Jed\/CutRing$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Jed\/CutRing$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Jed\/CutRing$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Jed\/CutRing$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Jed\/CutRing$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Jed\/CutRing$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Jed\/CutRing$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Jed\/CutRing$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Jed\/CutRing$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Jed\/CutRing$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Jed\/CutRing$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Jed\/CutRing$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Jed\/CutRing$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Jed\/CutRing$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Jed\/CutRing$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Jed\/CutRing$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/CutRing$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/CutRing$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/CutRing$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/CutRing$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/CutRing$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/CutRing$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/CutRing$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/CutRing$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/CutRing$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/CutRing$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/CutRing$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/CutRing$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/CutRing$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/CutRing$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/CutRing$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/CutRing$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/CutRing$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/CutRing$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Jed.CutRingUI", "shortDescription" : " A prototype UI for the cut ring.", "object" : "Jed\/CutRingUI$.html", "members_object" : [{"label" : "refreshIfVisible", "tail" : "(): Unit", "member" : "Jed.CutRingUI.refreshIfVisible", "link" : "Jed\/CutRingUI$.html#refreshIfVisible():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Jed\/CutRingUI$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Jed\/CutRingUI$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Jed\/CutRingUI$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Jed\/CutRingUI$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Jed\/CutRingUI$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Jed\/CutRingUI$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Jed\/CutRingUI$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Jed\/CutRingUI$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Jed\/CutRingUI$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Jed\/CutRingUI$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Jed\/CutRingUI$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Jed\/CutRingUI$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Jed\/CutRingUI$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Jed\/CutRingUI$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Jed\/CutRingUI$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Jed\/CutRingUI$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/CutRingUI$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/CutRingUI$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/CutRingUI$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/CutRingUI$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/CutRingUI$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/CutRingUI$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/CutRingUI$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/CutRingUI$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/CutRingUI$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/CutRingUI$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/CutRingUI$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/CutRingUI$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/CutRingUI$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/CutRingUI$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/CutRingUI$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/CutRingUI$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/CutRingUI$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/CutRingUI$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Jed.EditSession", "shortDescription" : "An edit session controlling the given document.", "object" : "Jed\/EditSession$.html", "members_class" : [{"label" : "dragCursor", "tail" : "(row: Int, col: Int): Unit", "member" : "Jed.EditSession.dragCursor", "link" : "Jed\/EditSession.html#dragCursor(row:Int,col:Int):Unit", "kind" : "def"}, {"label" : "setCursorAndMark", "tail" : "(row: Int, col: Int): Unit", "member" : "Jed.EditSession.setCursorAndMark", "link" : "Jed\/EditSession.html#setCursorAndMark(row:Int,col:Int):Unit", "kind" : "def"}, {"label" : "warnings", "tail" : ": Notifier[(String, String)]", "member" : "Jed.EditSession.warnings", "link" : "Jed\/EditSession.html#warnings:Red.Notifier[(String,String)]", "kind" : "val"}, {"label" : "hasCutRing", "tail" : "(): Boolean", "member" : "Jed.EditSession.hasCutRing", "link" : "Jed\/EditSession.html#hasCutRing:Boolean", "kind" : "def"}, {"label" : "recordCut", "tail" : "(thisCut: Cut): Unit", "member" : "Jed.EditSession.recordCut", "link" : "Jed\/EditSession.html#recordCut(thisCut:Red.Cut):Unit", "kind" : "def"}, {"label" : "selectAll", "tail" : "(): Unit", "member" : "Jed.EditSession.selectAll", "link" : "Jed\/EditSession.html#selectAll():Unit", "kind" : "def"}, {"label" : "toHome", "tail" : "(): Unit", "member" : "Jed.EditSession.toHome", "link" : "Jed\/EditSession.html#toHome():Unit", "kind" : "def"}, {"label" : "toEnd", "tail" : "(): Unit", "member" : "Jed.EditSession.toEnd", "link" : "Jed\/EditSession.html#toEnd():Unit", "kind" : "def"}, {"label" : "deleteFor", "tail" : "(extent: Int): Unit", "member" : "Jed.EditSession.deleteFor", "link" : "Jed\/EditSession.html#deleteFor(extent:Int):Unit", "kind" : "def"}, {"label" : "nextChar", "tail" : "(): Boolean", "member" : "Jed.EditSession.nextChar", "link" : "Jed\/EditSession.html#nextChar():Boolean", "kind" : "def"}, {"label" : "prevChar", "tail" : "(): Boolean", "member" : "Jed.EditSession.prevChar", "link" : "Jed\/EditSession.html#prevChar():Boolean", "kind" : "def"}, {"label" : "prevLine", "tail" : "(): Boolean", "member" : "Jed.EditSession.prevLine", "link" : "Jed\/EditSession.html#prevLine():Boolean", "kind" : "def"}, {"label" : "nextLine", "tail" : "(): Boolean", "member" : "Jed.EditSession.nextLine", "link" : "Jed\/EditSession.html#nextLine():Boolean", "kind" : "def"}, {"label" : "delete", "tail" : "(extent: Int): Unit", "member" : "Jed.EditSession.delete", "link" : "Jed\/EditSession.html#delete(extent:Int):Unit", "kind" : "def"}, {"label" : "delete", "tail" : "(): Unit", "member" : "Jed.EditSession.delete", "link" : "Jed\/EditSession.html#delete():Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(string: String): Unit", "member" : "Jed.EditSession.insert", "link" : "Jed\/EditSession.html#insert(string:String):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(ch: Char): Unit", "member" : "Jed.EditSession.insert", "link" : "Jed\/EditSession.html#insert(ch:Char):Unit", "kind" : "def"}, {"label" : "deSelect", "tail" : "(): Unit", "member" : "Jed.EditSession.deSelect", "link" : "Jed\/EditSession.html#deSelect():Unit", "kind" : "def"}, {"label" : "selectUntil", "tail" : "(mark: Int, indicative: Boolean): Unit", "member" : "Jed.EditSession.selectUntil", "link" : "Jed\/EditSession.html#selectUntil(mark:Int,indicative:Boolean):Unit", "kind" : "def"}, {"label" : "setMark", "tail" : "(newPosition: Int, indicative: Boolean): Unit", "member" : "Jed.EditSession.setMark", "link" : "Jed\/EditSession.html#setMark(newPosition:Int,indicative:Boolean):Unit", "kind" : "def"}, {"label" : "setMark", "tail" : "(row: Int, col: Int): Unit", "member" : "Jed.EditSession.setMark", "link" : "Jed\/EditSession.html#setMark(row:Int,col:Int):Unit", "kind" : "def"}, {"label" : "getCursorPosition", "tail" : "(): (Int, Int)", "member" : "Jed.EditSession.getCursorPosition", "link" : "Jed\/EditSession.html#getCursorPosition:(Int,Int)", "kind" : "def"}, {"label" : "setCursor", "tail" : "(row: Int, col: Int): Unit", "member" : "Jed.EditSession.setCursor", "link" : "Jed\/EditSession.html#setCursor(row:Int,col:Int):Unit", "kind" : "def"}, {"label" : "notifyHandlers", "tail" : "(): Unit", "member" : "Jed.EditSession.notifyHandlers", "link" : "Jed\/EditSession.html#notifyHandlers():Unit", "kind" : "def"}, {"label" : "selectionText", "tail" : "(): String", "member" : "Jed.EditSession.selectionText", "link" : "Jed\/EditSession.html#selectionText():String", "kind" : "def"}, {"label" : "hasNoSelection", "tail" : "(): Boolean", "member" : "Jed.EditSession.hasNoSelection", "link" : "Jed\/EditSession.html#hasNoSelection:Boolean", "kind" : "def"}, {"label" : "selection_=", "tail" : "(newSelection: Span): Unit", "member" : "Jed.EditSession.selection_=", "link" : "Jed\/EditSession.html#selection_=(newSelection:Jed.Span):Unit", "kind" : "def"}, {"label" : "selection", "tail" : "(): Span", "member" : "Jed.EditSession.selection", "link" : "Jed\/EditSession.html#selection:Jed.Span", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(position: Int): Unit", "member" : "Jed.EditSession.cursor_=", "link" : "Jed\/EditSession.html#cursor_=(position:Int):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Int", "member" : "Jed.EditSession.cursor", "link" : "Jed\/EditSession.html#cursor:Int", "kind" : "def"}, {"label" : "hasChanged", "tail" : "(): Boolean", "member" : "Jed.EditSession.hasChanged", "link" : "Jed\/EditSession.html#hasChanged:Boolean", "kind" : "def"}, {"member" : "Jed.EditSession#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": String", "member" : "Jed.EditSession.path", "link" : "Jed\/EditSession.html#path:String", "kind" : "var"}, {"label" : "document", "tail" : ": DocumentInterface", "member" : "Jed.EditSession.document", "link" : "Jed\/EditSession.html#document:Red.DocumentInterface", "kind" : "val"}, {"label" : "handleOnce", "tail" : "(tag: AnyRef)(handler: Handler[DocumentEvent])(body: => Unit): Unit", "member" : "Red.Notifier.handleOnce", "link" : "Jed\/EditSession.html#handleOnce(tag:AnyRef)(handler:Red.Notifier.Handler[Event])(body:=>Unit):Unit", "kind" : "def"}, {"label" : "disableResources", "tail" : "(): Unit", "member" : "Red.Notifier.disableResources", "link" : "Jed\/EditSession.html#disableResources():Unit", "kind" : "def"}, {"label" : "enableResources", "tail" : "(): Unit", "member" : "Red.Notifier.enableResources", "link" : "Jed\/EditSession.html#enableResources():Unit", "kind" : "def"}, {"label" : "removeTagged", "tail" : "(tag: AnyRef): Unit", "member" : "Red.Notifier.removeTagged", "link" : "Jed\/EditSession.html#removeTagged(tag:AnyRef):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Red.Notifier.toString", "link" : "Jed\/EditSession.html#toString():String", "kind" : "def"}, {"label" : "countTagged", "tail" : "(tag: AnyRef): Int", "member" : "Red.Notifier.countTagged", "link" : "Jed\/EditSession.html#countTagged(tag:AnyRef):Int", "kind" : "def"}, {"label" : "handleWith", "tail" : "(handler: Handler[DocumentEvent]): Unit", "member" : "Red.Notifier.handleWith", "link" : "Jed\/EditSession.html#handleWith(handler:Red.Notifier.Handler[Event]):Unit", "kind" : "def"}, {"label" : "handleWithTagged", "tail" : "(tag: AnyRef)(handler: Handler[DocumentEvent]): Unit", "member" : "Red.Notifier.handleWithTagged", "link" : "Jed\/EditSession.html#handleWithTagged(tag:AnyRef)(handler:Red.Notifier.Handler[Event]):Unit", "kind" : "def"}, {"label" : "allHandled", "tail" : "(event: DocumentEvent): Boolean", "member" : "Red.Notifier.allHandled", "link" : "Jed\/EditSession.html#allHandled(event:Event):Boolean", "kind" : "def"}, {"label" : "anyHandled", "tail" : "(event: DocumentEvent): Boolean", "member" : "Red.Notifier.anyHandled", "link" : "Jed\/EditSession.html#anyHandled(event:Event):Boolean", "kind" : "def"}, {"label" : "notify", "tail" : "(event: DocumentEvent): Unit", "member" : "Red.Notifier.notify", "link" : "Jed\/EditSession.html#notify(event:Event):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/EditSession.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/EditSession.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/EditSession.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/EditSession.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/EditSession.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/EditSession.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSession.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSession.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSession.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/EditSession.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/EditSession.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/EditSession.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/EditSession.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/EditSession.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/EditSession.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/EditSession.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/EditSession.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/EditSession.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Jed\/EditSession$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Jed\/EditSession$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Jed\/EditSession$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Jed\/EditSession$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Jed\/EditSession$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Jed\/EditSession$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Jed\/EditSession$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Jed\/EditSession$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Jed\/EditSession$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Jed\/EditSession$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Jed\/EditSession$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Jed\/EditSession$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Jed\/EditSession$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Jed\/EditSession$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Jed\/EditSession$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Jed\/EditSession$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/EditSession$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/EditSession$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/EditSession$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/EditSession$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/EditSession$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/EditSession$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSession$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSession$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSession$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/EditSession$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/EditSession$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/EditSession$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/EditSession$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/EditSession$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/EditSession$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/EditSession$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/EditSession$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/EditSession$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Jed\/EditSession.html", "kind" : "class"}, {"name" : "Jed.EditSessionCommands", "shortDescription" : "  Commands derived from EditSession methods.", "object" : "Jed\/EditSessionCommands$.html", "members_object" : [{"label" : "selectAll", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.selectAll", "link" : "Jed\/EditSessionCommands$.html#selectAll:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "toEnd", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.toEnd", "link" : "Jed\/EditSessionCommands$.html#toEnd:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "toHome", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.toHome", "link" : "Jed\/EditSessionCommands$.html#toHome:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "setMark", "tail" : "(row: Int, col: Int): SessionCommand", "member" : "Jed.EditSessionCommands.setMark", "link" : "Jed\/EditSessionCommands$.html#setMark(row:Int,col:Int):Jed.EditSessionCommands.SessionCommand", "kind" : "def"}, {"label" : "dragCursor", "tail" : "(row: Int, col: Int): SessionCommand", "member" : "Jed.EditSessionCommands.dragCursor", "link" : "Jed\/EditSessionCommands$.html#dragCursor(row:Int,col:Int):Jed.EditSessionCommands.SessionCommand", "kind" : "def"}, {"label" : "setCursorAndMark", "tail" : "(row: Int, col: Int): SessionCommand", "member" : "Jed.EditSessionCommands.setCursorAndMark", "link" : "Jed\/EditSessionCommands$.html#setCursorAndMark(row:Int,col:Int):Jed.EditSessionCommands.SessionCommand", "kind" : "def"}, {"label" : "setCursor", "tail" : "(row: Int, col: Int): SessionCommand", "member" : "Jed.EditSessionCommands.setCursor", "link" : "Jed\/EditSessionCommands$.html#setCursor(row:Int,col:Int):Jed.EditSessionCommands.SessionCommand", "kind" : "def"}, {"label" : "nextChar", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.nextChar", "link" : "Jed\/EditSessionCommands$.html#nextChar:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "prevChar", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.prevChar", "link" : "Jed\/EditSessionCommands$.html#prevChar:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "prevLine", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.prevLine", "link" : "Jed\/EditSessionCommands$.html#prevLine:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "nextLine", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.nextLine", "link" : "Jed\/EditSessionCommands$.html#nextLine:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "delete", "tail" : ": SessionCommand", "member" : "Jed.EditSessionCommands.delete", "link" : "Jed\/EditSessionCommands$.html#delete:Jed.EditSessionCommands.SessionCommand", "kind" : "val"}, {"label" : "insert", "tail" : "(ch: Char): SessionCommand", "member" : "Jed.EditSessionCommands.insert", "link" : "Jed\/EditSessionCommands$.html#insert(ch:Char):Jed.EditSessionCommands.SessionCommand", "kind" : "def"}, {"label" : "StateChangeOption", "tail" : "", "member" : "Jed.EditSessionCommands.StateChangeOption", "link" : "Jed\/EditSessionCommands$.html#StateChangeOption=Option[Commands.StateChange]", "kind" : "type"}, {"label" : "SessionCommand", "tail" : "", "member" : "Jed.EditSessionCommands.SessionCommand", "link" : "Jed\/EditSessionCommands$.html#SessionCommand=Commands.Command[Jed.EditSession]", "kind" : "type"}, {"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Jed\/EditSessionCommands$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Jed\/EditSessionCommands$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Jed\/EditSessionCommands$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Jed\/EditSessionCommands$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Jed\/EditSessionCommands$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Jed\/EditSessionCommands$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Jed\/EditSessionCommands$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Jed\/EditSessionCommands$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Jed\/EditSessionCommands$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Jed\/EditSessionCommands$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Jed\/EditSessionCommands$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Jed\/EditSessionCommands$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Jed\/EditSessionCommands$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Jed\/EditSessionCommands$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Jed\/EditSessionCommands$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Jed\/EditSessionCommands$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/EditSessionCommands$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/EditSessionCommands$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/EditSessionCommands$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/EditSessionCommands$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/EditSessionCommands$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/EditSessionCommands$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSessionCommands$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSessionCommands$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSessionCommands$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/EditSessionCommands$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/EditSessionCommands$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/EditSessionCommands$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/EditSessionCommands$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/EditSessionCommands$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/EditSessionCommands$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/EditSessionCommands$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/EditSessionCommands$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/EditSessionCommands$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Jed.EditSessionHandlers", "shortDescription" : " This class defines handlers for keyboard and mouse events.", "members_class" : [{"label" : "singleLineKeyboard", "tail" : ": UserInputHandler", "member" : "Jed.EditSessionHandlers.singleLineKeyboard", "link" : "Jed\/EditSessionHandlers.html#singleLineKeyboard:EditSessionHandlers.this.UserInputHandler", "kind" : "val"}, {"label" : "mouse", "tail" : ": UserInputHandler", "member" : "Jed.EditSessionHandlers.mouse", "link" : "Jed\/EditSessionHandlers.html#mouse:EditSessionHandlers.this.UserInputHandler", "kind" : "val"}, {"label" : "keyboard", "tail" : ": UserInputHandler", "member" : "Jed.EditSessionHandlers.keyboard", "link" : "Jed\/EditSessionHandlers.html#keyboard:EditSessionHandlers.this.UserInputHandler", "kind" : "val"}, {"label" : "UserInputHandler", "tail" : "", "member" : "Jed.EditSessionHandlers.UserInputHandler", "link" : "Jed\/EditSessionHandlers.html#UserInputHandler=Red.Notifier.Handler[Red.UserInput]", "kind" : "type"}, {"member" : "Jed.EditSessionHandlers#<init>", "error" : "unsupported entity"}, {"label" : "DO", "tail" : ": (Command[EditSession]) => Unit", "member" : "Jed.EditSessionHandlers.DO", "link" : "Jed\/EditSessionHandlers.html#DO:Commands.Command[Jed.EditSession]=>Unit", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/EditSessionHandlers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/EditSessionHandlers.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/EditSessionHandlers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/EditSessionHandlers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/EditSessionHandlers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/EditSessionHandlers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSessionHandlers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSessionHandlers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/EditSessionHandlers.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Jed\/EditSessionHandlers.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/EditSessionHandlers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/EditSessionHandlers.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/EditSessionHandlers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/EditSessionHandlers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/EditSessionHandlers.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/EditSessionHandlers.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/EditSessionHandlers.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/EditSessionHandlers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/EditSessionHandlers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Jed\/EditSessionHandlers.html", "kind" : "class"}, {"name" : "Jed.Jedi", "shortDescription" : "Start a UI on a session managing the document in the filestore at path, if it exists; and an empty document if it doesn't exist.", "object" : "Jed\/Jedi$.html", "members_class" : [{"label" : "ui", "tail" : ": UI", "member" : "Jed.Jedi.ui", "link" : "Jed\/Jedi.html#ui:Jed.UI", "kind" : "val"}, {"label" : "session", "tail" : ": EditSession", "member" : "Jed.Jedi.session", "link" : "Jed\/Jedi.html#session:Jed.EditSession", "kind" : "val"}, {"label" : "doc", "tail" : ": Document", "member" : "Jed.Jedi.doc", "link" : "Jed\/Jedi.html#doc:Red.Document", "kind" : "val"}, {"member" : "Jed.Jedi#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": String", "member" : "Jed.Jedi.path", "link" : "Jed\/Jedi.html#path:String", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/Jedi.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/Jedi.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/Jedi.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/Jedi.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/Jedi.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/Jedi.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Jedi.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Jedi.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Jedi.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Jed\/Jedi.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/Jedi.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/Jedi.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/Jedi.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/Jedi.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/Jedi.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/Jedi.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/Jedi.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/Jedi.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/Jedi.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "process", "tail" : "(arg: String): Unit", "member" : "Jed.Jedi.process", "link" : "Jed\/Jedi$.html#process(arg:String):Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "Jed.Jedi.main", "link" : "Jed\/Jedi$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/Jedi$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/Jedi$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/Jedi$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/Jedi$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/Jedi$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/Jedi$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Jedi$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Jedi$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Jedi$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Jed\/Jedi$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/Jedi$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/Jedi$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/Jedi$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/Jedi$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/Jedi$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/Jedi$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/Jedi$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/Jedi$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/Jedi$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Jed\/Jedi.html", "kind" : "class"}, {"name" : "Jed.NoSelection", "shortDescription" : "An empty span used to represent no selection", "object" : "Jed\/NoSelection$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "Jed.NoSelection.toString", "link" : "Jed\/NoSelection$.html#toString():String", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "Jed.Span.isEmpty", "link" : "Jed\/NoSelection$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "right", "tail" : "(): Int", "member" : "Jed.Span.right", "link" : "Jed\/NoSelection$.html#right:Int", "kind" : "def"}, {"label" : "left", "tail" : "(): Int", "member" : "Jed.Span.left", "link" : "Jed\/NoSelection$.html#left:Int", "kind" : "def"}, {"label" : "extent", "tail" : "(): Int", "member" : "Jed.Span.extent", "link" : "Jed\/NoSelection$.html#extent:Int", "kind" : "def"}, {"label" : "markAtRight", "tail" : "(): Boolean", "member" : "Jed.Span.markAtRight", "link" : "Jed\/NoSelection$.html#markAtRight:Boolean", "kind" : "def"}, {"label" : "markFrom", "tail" : "(newCursor: Int): Int", "member" : "Jed.Span.markFrom", "link" : "Jed\/NoSelection$.html#markFrom(newCursor:Int):Int", "kind" : "def"}, {"label" : "indicative", "tail" : ": Boolean", "member" : "Jed.Span.indicative", "link" : "Jed\/NoSelection$.html#indicative:Boolean", "kind" : "val"}, {"label" : "mark", "tail" : ": Int", "member" : "Jed.Span.mark", "link" : "Jed\/NoSelection$.html#mark:Int", "kind" : "val"}, {"label" : "cursor", "tail" : ": Int", "member" : "Jed.Span.cursor", "link" : "Jed\/NoSelection$.html#cursor:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Jed\/NoSelection$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/NoSelection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/NoSelection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/NoSelection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/NoSelection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/NoSelection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/NoSelection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/NoSelection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/NoSelection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/NoSelection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/NoSelection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/NoSelection$.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/NoSelection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/NoSelection$.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/NoSelection$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/NoSelection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/NoSelection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Jed.Span", "shortDescription" : "Representation of the state of a selection in an editing session.", "members_case class" : [{"label" : "isEmpty", "tail" : "(): Boolean", "member" : "Jed.Span.isEmpty", "link" : "Jed\/Span.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "right", "tail" : "(): Int", "member" : "Jed.Span.right", "link" : "Jed\/Span.html#right:Int", "kind" : "def"}, {"label" : "left", "tail" : "(): Int", "member" : "Jed.Span.left", "link" : "Jed\/Span.html#left:Int", "kind" : "def"}, {"label" : "extent", "tail" : "(): Int", "member" : "Jed.Span.extent", "link" : "Jed\/Span.html#extent:Int", "kind" : "def"}, {"label" : "markAtRight", "tail" : "(): Boolean", "member" : "Jed.Span.markAtRight", "link" : "Jed\/Span.html#markAtRight:Boolean", "kind" : "def"}, {"label" : "markFrom", "tail" : "(newCursor: Int): Int", "member" : "Jed.Span.markFrom", "link" : "Jed\/Span.html#markFrom(newCursor:Int):Int", "kind" : "def"}, {"member" : "Jed.Span#<init>", "error" : "unsupported entity"}, {"label" : "indicative", "tail" : ": Boolean", "member" : "Jed.Span.indicative", "link" : "Jed\/Span.html#indicative:Boolean", "kind" : "val"}, {"label" : "mark", "tail" : ": Int", "member" : "Jed.Span.mark", "link" : "Jed\/Span.html#mark:Int", "kind" : "val"}, {"label" : "cursor", "tail" : ": Int", "member" : "Jed.Span.cursor", "link" : "Jed\/Span.html#cursor:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Jed\/Span.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/Span.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/Span.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/Span.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/Span.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/Span.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/Span.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Span.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Span.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Span.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/Span.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/Span.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/Span.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/Span.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/Span.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/Span.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/Span.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Jed\/Span.html", "kind" : "case class"}, {"name" : "Jed.TextLine", "shortDescription" : "A single, horizontal, line of text with configurable keyboard andmouse behaviour.", "object" : "Jed\/TextLine$.html", "members_class" : [{"label" : "Content", "tail" : "", "member" : "scala.swing.Container.Wrapper.Content", "link" : "Jed\/TextLine.html#ContentextendsBufferWrapper[scala.swing.Component]", "kind" : "class"}, {"label" : "SuperMixin", "tail" : "", "member" : "scala.swing.Component.SuperMixin", "link" : "Jed\/TextLine.html#SuperMixinextendsJComponent", "kind" : "trait"}, {"label" : "text_=", "tail" : "(newText: String): Unit", "member" : "Jed.TextLine.text_=", "link" : "Jed\/TextLine.html#text_=(newText:String):Unit", "kind" : "def"}, {"label" : "text", "tail" : "(): String", "member" : "Jed.TextLine.text", "link" : "Jed\/TextLine.html#text:String", "kind" : "def"}, {"label" : "lastHandler", "tail" : "(): UserInputHandler", "member" : "Jed.TextLine.lastHandler", "link" : "Jed\/TextLine.html#lastHandler:Red.UserInputHandlers.UserInputHandler", "kind" : "def"}, {"label" : "firstHandler", "tail" : "(): UserInputHandler", "member" : "Jed.TextLine.firstHandler", "link" : "Jed\/TextLine.html#firstHandler:Red.UserInputHandlers.UserInputHandler", "kind" : "def"}, {"label" : "lfHandler", "tail" : ": UserInputHandler", "member" : "Jed.TextLine.lfHandler", "link" : "Jed\/TextLine.html#lfHandler:Red.UserInputHandlers.UserInputHandler", "kind" : "val"}, {"label" : "handler", "tail" : ": EditSessionHandlers", "member" : "Jed.TextLine.handler", "link" : "Jed\/TextLine.html#handler:Jed.EditSessionHandlers", "kind" : "val"}, {"label" : "DO", "tail" : "(command: Command[EditSession]): Unit", "member" : "Jed.TextLine.DO", "link" : "Jed\/TextLine.html#DO(command:Commands.Command[Jed.EditSession]):Unit", "kind" : "def"}, {"label" : "view", "tail" : ": DocumentView", "member" : "Jed.TextLine.view", "link" : "Jed\/TextLine.html#view:Red.DocumentView", "kind" : "val"}, {"label" : "session", "tail" : ": EditSession", "member" : "Jed.TextLine.session", "link" : "Jed\/TextLine.html#session:Jed.EditSession", "kind" : "val"}, {"label" : "doc", "tail" : ": DocumentInterface", "member" : "Jed.TextLine.doc", "link" : "Jed\/TextLine.html#doc:Red.DocumentInterface", "kind" : "val"}, {"label" : "surrogateLF", "tail" : ": String", "member" : "Jed.TextLine.surrogateLF", "link" : "Jed\/TextLine.html#surrogateLF:String", "kind" : "val"}, {"label" : "realLF", "tail" : ": String", "member" : "Jed.TextLine.realLF", "link" : "Jed\/TextLine.html#realLF:String", "kind" : "val"}, {"member" : "Jed.TextLine#<init>", "error" : "unsupported entity"}, {"label" : "peer", "tail" : ": JPanel", "member" : "scala.swing.BoxPanel.peer", "link" : "Jed\/TextLine.html#peer:javax.swing.JPanel", "kind" : "lazy val"}, {"label" : "contents", "tail" : ": Buffer[Component]", "member" : "scala.swing.SequentialContainer.Wrapper.contents", "link" : "Jed\/TextLine.html#contents:scala.collection.mutable.Buffer[scala.swing.Component]", "kind" : "val"}, {"label" : "_contents", "tail" : ": Content", "member" : "scala.swing.Container.Wrapper._contents", "link" : "Jed\/TextLine.html#_contents:Wrapper.this.Content", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.swing.Component.toString", "link" : "Jed\/TextLine.html#toString():String", "kind" : "def"}, {"label" : "paint", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paint", "link" : "Jed\/TextLine.html#paint(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintChildren", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintChildren", "link" : "Jed\/TextLine.html#paintChildren(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintBorder", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintBorder", "link" : "Jed\/TextLine.html#paintBorder(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintComponent", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintComponent", "link" : "Jed\/TextLine.html#paintComponent(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "revalidate", "tail" : "(): Unit", "member" : "scala.swing.Component.revalidate", "link" : "Jed\/TextLine.html#revalidate():Unit", "kind" : "def"}, {"label" : "onFirstSubscribe", "tail" : "(): Unit", "member" : "scala.swing.Component.onFirstSubscribe", "link" : "Jed\/TextLine.html#onFirstSubscribe():Unit", "kind" : "def"}, {"label" : "hasFocus", "tail" : "(): Boolean", "member" : "scala.swing.Component.hasFocus", "link" : "Jed\/TextLine.html#hasFocus:Boolean", "kind" : "def"}, {"label" : "requestFocusInWindow", "tail" : "(): Boolean", "member" : "scala.swing.Component.requestFocusInWindow", "link" : "Jed\/TextLine.html#requestFocusInWindow():Boolean", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scala.swing.Component.requestFocus", "link" : "Jed\/TextLine.html#requestFocus():Unit", "kind" : "def"}, {"label" : "focusable_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.focusable_=", "link" : "Jed\/TextLine.html#focusable_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "focusable", "tail" : "(): Boolean", "member" : "scala.swing.Component.focusable", "link" : "Jed\/TextLine.html#focusable:Boolean", "kind" : "def"}, {"label" : "inputVerifier_=", "tail" : "(v: (Component) => Boolean): Unit", "member" : "scala.swing.Component.inputVerifier_=", "link" : "Jed\/TextLine.html#inputVerifier_=(v:scala.swing.Component=>Boolean):Unit", "kind" : "def"}, {"label" : "inputVerifier", "tail" : "(): (Component) => Boolean", "member" : "scala.swing.Component.inputVerifier", "link" : "Jed\/TextLine.html#inputVerifier:scala.swing.Component=>Boolean", "kind" : "def"}, {"label" : "tooltip_=", "tail" : "(t: String): Unit", "member" : "scala.swing.Component.tooltip_=", "link" : "Jed\/TextLine.html#tooltip_=(t:String):Unit", "kind" : "def"}, {"label" : "tooltip", "tail" : "(): String", "member" : "scala.swing.Component.tooltip", "link" : "Jed\/TextLine.html#tooltip:String", "kind" : "def"}, {"label" : "enabled_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.enabled_=", "link" : "Jed\/TextLine.html#enabled_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "enabled", "tail" : "(): Boolean", "member" : "scala.swing.Component.enabled", "link" : "Jed\/TextLine.html#enabled:Boolean", "kind" : "def"}, {"label" : "opaque_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.opaque_=", "link" : "Jed\/TextLine.html#opaque_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "opaque", "tail" : "(): Boolean", "member" : "scala.swing.Component.opaque", "link" : "Jed\/TextLine.html#opaque:Boolean", "kind" : "def"}, {"label" : "border_=", "tail" : "(b: Border): Unit", "member" : "scala.swing.Component.border_=", "link" : "Jed\/TextLine.html#border_=(b:javax.swing.border.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): Border", "member" : "scala.swing.Component.border", "link" : "Jed\/TextLine.html#border:javax.swing.border.Border", "kind" : "def"}, {"label" : "yLayoutAlignment_=", "tail" : "(y: Double): Unit", "member" : "scala.swing.Component.yLayoutAlignment_=", "link" : "Jed\/TextLine.html#yLayoutAlignment_=(y:Double):Unit", "kind" : "def"}, {"label" : "yLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.yLayoutAlignment", "link" : "Jed\/TextLine.html#yLayoutAlignment:Double", "kind" : "def"}, {"label" : "xLayoutAlignment_=", "tail" : "(x: Double): Unit", "member" : "scala.swing.Component.xLayoutAlignment_=", "link" : "Jed\/TextLine.html#xLayoutAlignment_=(x:Double):Unit", "kind" : "def"}, {"label" : "xLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.xLayoutAlignment", "link" : "Jed\/TextLine.html#xLayoutAlignment:Double", "kind" : "def"}, {"label" : "name_=", "tail" : "(s: String): Unit", "member" : "scala.swing.Component.name_=", "link" : "Jed\/TextLine.html#name_=(s:String):Unit", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.swing.Component.name", "link" : "Jed\/TextLine.html#name:String", "kind" : "def"}, {"label" : "onLastUnsubscribe", "tail" : "(): Unit", "member" : "scala.swing.UIElement.onLastUnsubscribe", "link" : "Jed\/TextLine.html#onLastUnsubscribe():Unit", "kind" : "def"}, {"label" : "ignoreRepaint_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.ignoreRepaint_=", "link" : "Jed\/TextLine.html#ignoreRepaint_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "ignoreRepaint", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.ignoreRepaint", "link" : "Jed\/TextLine.html#ignoreRepaint:Boolean", "kind" : "def"}, {"label" : "repaint", "tail" : "(rect: Rectangle): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Jed\/TextLine.html#repaint(rect:scala.swing.Rectangle):Unit", "kind" : "def"}, {"label" : "repaint", "tail" : "(): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Jed\/TextLine.html#repaint():Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(): Unit", "member" : "scala.swing.UIElement.validate", "link" : "Jed\/TextLine.html#validate():Unit", "kind" : "def"}, {"label" : "displayable", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.displayable", "link" : "Jed\/TextLine.html#displayable:Boolean", "kind" : "def"}, {"label" : "showing", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.showing", "link" : "Jed\/TextLine.html#showing:Boolean", "kind" : "def"}, {"label" : "visible_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.visible_=", "link" : "Jed\/TextLine.html#visible_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.visible", "link" : "Jed\/TextLine.html#visible:Boolean", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(c: Cursor): Unit", "member" : "scala.swing.UIElement.cursor_=", "link" : "Jed\/TextLine.html#cursor_=(c:java.awt.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Cursor", "member" : "scala.swing.UIElement.cursor", "link" : "Jed\/TextLine.html#cursor:java.awt.Cursor", "kind" : "def"}, {"label" : "toolkit", "tail" : "(): Toolkit", "member" : "scala.swing.UIElement.toolkit", "link" : "Jed\/TextLine.html#toolkit:java.awt.Toolkit", "kind" : "def"}, {"label" : "locale", "tail" : "(): Locale", "member" : "scala.swing.UIElement.locale", "link" : "Jed\/TextLine.html#locale:java.util.Locale", "kind" : "def"}, {"label" : "size", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.size", "link" : "Jed\/TextLine.html#size:scala.swing.Dimension", "kind" : "def"}, {"label" : "bounds", "tail" : "(): Rectangle", "member" : "scala.swing.UIElement.bounds", "link" : "Jed\/TextLine.html#bounds:scala.swing.Rectangle", "kind" : "def"}, {"label" : "location", "tail" : "(): Point", "member" : "scala.swing.UIElement.location", "link" : "Jed\/TextLine.html#location:scala.swing.Point", "kind" : "def"}, {"label" : "locationOnScreen", "tail" : "(): Point", "member" : "scala.swing.UIElement.locationOnScreen", "link" : "Jed\/TextLine.html#locationOnScreen:scala.swing.Point", "kind" : "def"}, {"label" : "font_=", "tail" : "(f: Font): Unit", "member" : "scala.swing.UIElement.font_=", "link" : "Jed\/TextLine.html#font_=(f:scala.swing.Font):Unit", "kind" : "def"}, {"label" : "font", "tail" : "(): Font", "member" : "scala.swing.UIElement.font", "link" : "Jed\/TextLine.html#font:scala.swing.Font", "kind" : "def"}, {"label" : "componentOrientation_=", "tail" : "(x: ComponentOrientation): Unit", "member" : "scala.swing.UIElement.componentOrientation_=", "link" : "Jed\/TextLine.html#componentOrientation_=(x:java.awt.ComponentOrientation):Unit", "kind" : "def"}, {"label" : "componentOrientation", "tail" : "(): ComponentOrientation", "member" : "scala.swing.UIElement.componentOrientation", "link" : "Jed\/TextLine.html#componentOrientation:java.awt.ComponentOrientation", "kind" : "def"}, {"label" : "preferredSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.preferredSize_=", "link" : "Jed\/TextLine.html#preferredSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "preferredSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.preferredSize", "link" : "Jed\/TextLine.html#preferredSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "maximumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.maximumSize_=", "link" : "Jed\/TextLine.html#maximumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "maximumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.maximumSize", "link" : "Jed\/TextLine.html#maximumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "minimumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.minimumSize_=", "link" : "Jed\/TextLine.html#minimumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "minimumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.minimumSize", "link" : "Jed\/TextLine.html#minimumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "background_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.background_=", "link" : "Jed\/TextLine.html#background_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): Color", "member" : "scala.swing.UIElement.background", "link" : "Jed\/TextLine.html#background:scala.swing.Color", "kind" : "def"}, {"label" : "foreground_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.foreground_=", "link" : "Jed\/TextLine.html#foreground_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "foreground", "tail" : "(): Color", "member" : "scala.swing.UIElement.foreground", "link" : "Jed\/TextLine.html#foreground:scala.swing.Color", "kind" : "def"}, {"label" : "self", "tail" : "(): Any", "member" : "scala.swing.UIElement.self", "link" : "Jed\/TextLine.html#self:Any", "kind" : "def"}, {"label" : "unsubscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.unsubscribe", "link" : "Jed\/TextLine.html#unsubscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "subscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.subscribe", "link" : "Jed\/TextLine.html#subscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "publish", "tail" : "(e: Event): Unit", "member" : "scala.swing.Publisher.publish", "link" : "Jed\/TextLine.html#publish(e:scala.swing.event.Event):Unit", "kind" : "def"}, {"label" : "listeners", "tail" : ": RefSet[Reaction]", "member" : "scala.swing.Publisher.listeners", "link" : "Jed\/TextLine.html#listeners:scala.swing.RefSet[scala.swing.Reactions.Reaction]", "kind" : "val"}, {"label" : "deafTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.deafTo", "link" : "Jed\/TextLine.html#deafTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.listenTo", "link" : "Jed\/TextLine.html#listenTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "reactions", "tail" : ": Reactions", "member" : "scala.swing.Reactor.reactions", "link" : "Jed\/TextLine.html#reactions:scala.swing.Reactions", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.Proxy.equals", "link" : "Jed\/TextLine.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Proxy.hashCode", "link" : "Jed\/TextLine.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/TextLine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/TextLine.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/TextLine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/TextLine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/TextLine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/TextLine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/TextLine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/TextLine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/TextLine.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/TextLine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/TextLine.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/TextLine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/TextLine.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/TextLine.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/TextLine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/TextLine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Jed\/TextLine$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Jed\/TextLine$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Jed\/TextLine$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Jed\/TextLine$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Jed\/TextLine$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Jed\/TextLine$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Jed\/TextLine$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Jed\/TextLine$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Jed\/TextLine$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Jed\/TextLine$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Jed\/TextLine$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Jed\/TextLine$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Jed\/TextLine$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Jed\/TextLine$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Jed\/TextLine$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Jed\/TextLine$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/TextLine$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/TextLine$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/TextLine$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/TextLine$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/TextLine$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/TextLine$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/TextLine$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/TextLine$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/TextLine$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/TextLine$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/TextLine$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/TextLine$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/TextLine$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/TextLine$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/TextLine$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/TextLine$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/TextLine$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/TextLine$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Jed\/TextLine.html", "kind" : "class"}, {"name" : "Jed.UI", "shortDescription" : "", "object" : "Jed\/UI$.html", "members_class" : [{"label" : "start", "tail" : "(): Unit", "member" : "Jed.UI.start", "link" : "Jed\/UI.html#start():Unit", "kind" : "def"}, {"label" : "isVisible", "tail" : "(): Boolean", "member" : "Jed.UI.isVisible", "link" : "Jed\/UI.html#isVisible:Boolean", "kind" : "def"}, {"label" : "Retry", "tail" : "", "member" : "Jed.UI.Retry", "link" : "Jed\/UI.html#Retry", "kind" : "object"}, {"label" : "closeUI", "tail" : "(): Unit", "member" : "Jed.UI.closeUI", "link" : "Jed\/UI.html#closeUI():Unit", "kind" : "def"}, {"label" : "isFileEditor", "tail" : "(): Boolean", "member" : "Jed.UI.isFileEditor", "link" : "Jed\/UI.html#isFileEditor:Boolean", "kind" : "def"}, {"label" : "hasChanged", "tail" : "(): Boolean", "member" : "Jed.UI.hasChanged", "link" : "Jed\/UI.html#hasChanged:Boolean", "kind" : "def"}, {"label" : "top", "tail" : ": Frame", "member" : "Jed.UI.top", "link" : "Jed\/UI.html#top:scala.swing.Frame", "kind" : "val"}, {"label" : "replace", "tail" : "(thePattern: String, theReplacement: String, backwards: Boolean): Unit", "member" : "Jed.UI.replace", "link" : "Jed\/UI.html#replace(thePattern:String,theReplacement:String,backwards:Boolean):Unit", "kind" : "def"}, {"label" : "find", "tail" : "(thePattern: String, backwards: Boolean): Unit", "member" : "Jed.UI.find", "link" : "Jed\/UI.html#find(thePattern:String,backwards:Boolean):Unit", "kind" : "def"}, {"label" : "UI_DO", "tail" : "(c: Command[EditSession]): Unit", "member" : "Jed.UI.UI_DO", "link" : "Jed\/UI.html#UI_DO(c:Commands.Command[Jed.EditSession]):Unit", "kind" : "def"}, {"label" : "feedback", "tail" : "(message: String): Unit", "member" : "Jed.UI.feedback", "link" : "Jed\/UI.html#feedback(message:String):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(from: String, message: String): Unit", "member" : "Jed.UI.warning", "link" : "Jed\/UI.html#warning(from:String,message:String):Unit", "kind" : "def"}, {"label" : "handlers", "tail" : ": EditSessionHandlers", "member" : "Jed.UI.handlers", "link" : "Jed\/UI.html#handlers:Jed.EditSessionHandlers", "kind" : "val"}, {"member" : "Jed.UI#<init>", "error" : "unsupported entity"}, {"label" : "theSession", "tail" : ": EditSession", "member" : "Jed.UI.theSession", "link" : "Jed\/UI.html#theSession:Jed.EditSession", "kind" : "val"}, {"label" : "resourceFromUserDirectory", "tail" : "(path: String): File", "member" : "scala.swing.SimpleSwingApplication.resourceFromUserDirectory", "link" : "Jed\/UI.html#resourceFromUserDirectory(path:String):java.io.File", "kind" : "def"}, {"label" : "resourceFromClassloader", "tail" : "(path: String): URL", "member" : "scala.swing.SimpleSwingApplication.resourceFromClassloader", "link" : "Jed\/UI.html#resourceFromClassloader(path:String):java.net.URL", "kind" : "def"}, {"label" : "startup", "tail" : "(args: Array[String]): Unit", "member" : "scala.swing.SimpleSwingApplication.startup", "link" : "Jed\/UI.html#startup(args:Array[String]):Unit", "kind" : "def"}, {"label" : "shutdown", "tail" : "(): Unit", "member" : "scala.swing.SwingApplication.shutdown", "link" : "Jed\/UI.html#shutdown():Unit", "kind" : "def"}, {"label" : "quit", "tail" : "(): Unit", "member" : "scala.swing.SwingApplication.quit", "link" : "Jed\/UI.html#quit():Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.swing.SwingApplication.main", "link" : "Jed\/UI.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "deafTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.deafTo", "link" : "Jed\/UI.html#deafTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.listenTo", "link" : "Jed\/UI.html#listenTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "reactions", "tail" : ": Reactions", "member" : "scala.swing.Reactor.reactions", "link" : "Jed\/UI.html#reactions:scala.swing.Reactions", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/UI.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/UI.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/UI.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/UI.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/UI.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/UI.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/UI.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/UI.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/UI.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Jed\/UI.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/UI.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/UI.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/UI.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/UI.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/UI.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/UI.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/UI.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/UI.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/UI.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Jed\/UI$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Jed\/UI$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Jed\/UI$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Jed\/UI$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Jed\/UI$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Jed\/UI$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Jed\/UI$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Jed\/UI$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Jed\/UI$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Jed\/UI$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Jed\/UI$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Jed\/UI$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Jed\/UI$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Jed\/UI$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Jed\/UI$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Jed\/UI$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/UI$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/UI$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/UI$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/UI$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/UI$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/UI$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/UI$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/UI$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/UI$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/UI$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/UI$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/UI$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/UI$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/UI$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/UI$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/UI$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/UI$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/UI$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Jed\/UI.html", "kind" : "class"}, {"name" : "Jed.Utils", "shortDescription" : "System wide default settings.", "object" : "Jed\/Utils$.html", "members_object" : [{"label" : "save", "tail" : "(path: String, document: DocumentInterface): String", "member" : "Jed.Utils.save", "link" : "Jed\/Utils$.html#save(path:String,document:Red.DocumentInterface):String", "kind" : "def"}, {"label" : "NEWFILESUFFIX", "tail" : ": String", "member" : "Jed.Utils.NEWFILESUFFIX", "link" : "Jed\/Utils$.html#NEWFILESUFFIX:String", "kind" : "val"}, {"label" : "filePath2Backup", "tail" : "(filePath: String): String", "member" : "Jed.Utils.filePath2Backup", "link" : "Jed\/Utils$.html#filePath2Backup(filePath:String):String", "kind" : "def"}, {"label" : "redIcon", "tail" : ": Icon", "member" : "Jed.Utils.redIcon", "link" : "Jed\/Utils$.html#redIcon:javax.swing.Icon", "kind" : "val"}, {"label" : "closeIcon", "tail" : ": Icon", "member" : "Jed.Utils.closeIcon", "link" : "Jed\/Utils$.html#closeIcon:javax.swing.Icon", "kind" : "val"}, {"label" : "dateString", "tail" : "(): String", "member" : "Jed.Utils.dateString", "link" : "Jed\/Utils$.html#dateString():String", "kind" : "def"}, {"label" : "dateString", "tail" : "(time: Long): String", "member" : "Jed.Utils.dateString", "link" : "Jed\/Utils$.html#dateString(time:Long):String", "kind" : "def"}, {"label" : "feedbackColor", "tail" : ": Color", "member" : "Jed.Utils.feedbackColor", "link" : "Jed\/Utils$.html#feedbackColor:java.awt.Color", "kind" : "var"}, {"label" : "feedbackFont", "tail" : ": Font", "member" : "Jed.Utils.feedbackFont", "link" : "Jed\/Utils$.html#feedbackFont:java.awt.Font", "kind" : "var"}, {"label" : "widgetFont", "tail" : ": Font", "member" : "Jed.Utils.widgetFont", "link" : "Jed\/Utils$.html#widgetFont:java.awt.Font", "kind" : "var"}, {"label" : "buttonFont", "tail" : ": Font", "member" : "Jed.Utils.buttonFont", "link" : "Jed\/Utils$.html#buttonFont:java.awt.Font", "kind" : "var"}, {"label" : "defaultFont", "tail" : ": Font", "member" : "Jed.Utils.defaultFont", "link" : "Jed\/Utils$.html#defaultFont:java.awt.Font", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Jed\/Utils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Jed\/Utils$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Jed\/Utils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Jed\/Utils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Jed\/Utils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Jed\/Utils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Utils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Utils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Jed\/Utils$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Jed\/Utils$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Jed\/Utils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Jed\/Utils$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Jed\/Utils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Jed\/Utils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Jed\/Utils$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Jed\/Utils$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Jed\/Utils$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Jed\/Utils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Jed\/Utils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "Logging" : [{"name" : "Logging.Default", "shortDescription" : "The default Loggable object.", "object" : "Logging\/package$$Default$.html", "members_object" : [{"label" : "className", "tail" : "(): String", "member" : "Logging.Default.className", "link" : "Logging\/package$$Default$.html#className:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Logging\/package$$Default$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Logging\/package$$Default$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Logging\/package$$Default$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Logging\/package$$Default$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Logging\/package$$Default$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Logging\/package$$Default$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Logging\/package$$Default$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Logging\/package$$Default$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Logging\/package$$Default$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Logging\/package$$Default$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Logging\/package$$Default$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Logging\/package$$Default$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Logging\/package$$Default$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Logging\/package$$Default$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Logging\/package$$Default$.html#classKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Logging\/package$$Default$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Logging\/package$$Default$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Logging\/package$$Default$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Logging\/package$$Default$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Logging\/package$$Default$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Logging\/package$$Default$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Default$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Default$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Default$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Logging\/package$$Default$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Logging\/package$$Default$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Logging\/package$$Default$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Logging\/package$$Default$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Logging\/package$$Default$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Logging\/package$$Default$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Logging\/package$$Default$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Logging\/package$$Default$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Logging\/package$$Default$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Logging.levelName", "shortDescription" : " Public interface to the level name table.", "object" : "Logging\/package$$levelName$.html", "members_object" : [{"label" : "apply", "tail" : "(level: Int): String", "member" : "Logging.levelName.apply", "link" : "Logging\/package$$levelName$.html#apply(level:Int):String", "kind" : "def"}, {"label" : "update", "tail" : "(levelValue: Int, levelString: String): Int", "member" : "Logging.levelName.update", "link" : "Logging\/package$$levelName$.html#update(levelValue:Int,levelString:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Logging\/package$$levelName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Logging\/package$$levelName$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Logging\/package$$levelName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Logging\/package$$levelName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Logging\/package$$levelName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Logging\/package$$levelName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$levelName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$levelName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$levelName$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Logging\/package$$levelName$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Logging\/package$$levelName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Logging\/package$$levelName$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Logging\/package$$levelName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Logging\/package$$levelName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Logging\/package$$levelName$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Logging\/package$$levelName$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Logging\/package$$levelName$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Logging\/package$$levelName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Logging\/package$$levelName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Logging.Loggable", "trait" : "Logging\/package$$Loggable.html", "kind" : "trait", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Logging\/package$$Loggable.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Logging\/package$$Loggable.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Logging\/package$$Loggable.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Logging\/package$$Loggable.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Logging\/package$$Loggable.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Logging\/package$$Loggable.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Logging\/package$$Loggable.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Logging\/package$$Loggable.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Logging\/package$$Loggable.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Logging\/package$$Loggable.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Logging\/package$$Loggable.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Logging\/package$$Loggable.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Logging\/package$$Loggable.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Logging\/package$$Loggable.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Logging\/package$$Loggable.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Logging\/package$$Loggable.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Logging\/package$$Loggable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Logging\/package$$Loggable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Logging\/package$$Loggable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Logging\/package$$Loggable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Logging\/package$$Loggable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Logging\/package$$Loggable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Loggable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Loggable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Loggable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Logging\/package$$Loggable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Logging\/package$$Loggable.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Logging\/package$$Loggable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Logging\/package$$Loggable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Logging\/package$$Loggable.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Logging\/package$$Loggable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Logging\/package$$Loggable.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Logging\/package$$Loggable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Logging\/package$$Loggable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A convenience trait to support efficient use oflogging from outside an object whose logging callsare written idiomatically as (for example)"}, {"name" : "Logging.Logger", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Logger.toString", "link" : "Logging\/package$$Logger.html#toString():String", "kind" : "def"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Logger.level", "link" : "Logging\/package$$Logger.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Logger.level_=", "link" : "Logging\/package$$Logger.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(messageLevel: => Int, message: => String): Unit", "member" : "Logging.Logger.log", "link" : "Logging\/package$$Logger.html#log(messageLevel:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Logger.fatal", "link" : "Logging\/package$$Logger.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Logger.error", "link" : "Logging\/package$$Logger.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Logger.warn", "link" : "Logging\/package$$Logger.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Logger.info", "link" : "Logging\/package$$Logger.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Logger.fine", "link" : "Logging\/package$$Logger.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Logger.finer", "link" : "Logging\/package$$Logger.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Logger.finest", "link" : "Logging\/package$$Logger.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "writeLog", "tail" : "(level: Int, logName: String, message: String): Unit", "member" : "Logging.Logger.writeLog", "link" : "Logging\/package$$Logger.html#writeLog(level:Int,logName:String,message:String):Unit", "kind" : "def"}, {"member" : "Logging.Logger#<init>", "error" : "unsupported entity"}, {"label" : "host", "tail" : ": Option[Loggable]", "member" : "Logging.Logger.host", "link" : "Logging\/package$$Logger.html#host:Option[Logging.package.Loggable]", "kind" : "var"}, {"label" : "writeMessage", "tail" : ": (LogMessage) => Unit", "member" : "Logging.Logger.writeMessage", "link" : "Logging\/package$$Logger.html#writeMessage:Logging.package.LogMessage=>Unit", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Logging\/package$$Logger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Logging\/package$$Logger.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Logging\/package$$Logger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Logging\/package$$Logger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Logging\/package$$Logger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Logging\/package$$Logger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Logger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Logger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$Logger.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Logging\/package$$Logger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Logging\/package$$Logger.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Logging\/package$$Logger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Logging\/package$$Logger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Logging\/package$$Logger.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Logging\/package$$Logger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Logging\/package$$Logger.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Logging\/package$$Logger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Logging\/package$$Logger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Logging\/package$$Logger.html", "kind" : "class"}, {"name" : "Logging.LogMessage", "shortDescription" : "", "members_case class" : [{"member" : "Logging.LogMessage#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "Logging.LogMessage.message", "link" : "Logging\/package$$LogMessage.html#message:String", "kind" : "val"}, {"label" : "logName", "tail" : ": String", "member" : "Logging.LogMessage.logName", "link" : "Logging\/package$$LogMessage.html#logName:String", "kind" : "val"}, {"label" : "level", "tail" : ": Int", "member" : "Logging.LogMessage.level", "link" : "Logging\/package$$LogMessage.html#level:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Logging\/package$$LogMessage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Logging\/package$$LogMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Logging\/package$$LogMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Logging\/package$$LogMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Logging\/package$$LogMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Logging\/package$$LogMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Logging\/package$$LogMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$LogMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$LogMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Logging\/package$$LogMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Logging\/package$$LogMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Logging\/package$$LogMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Logging\/package$$LogMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Logging\/package$$LogMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Logging\/package$$LogMessage.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Logging\/package$$LogMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Logging\/package$$LogMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Logging\/package$$LogMessage.html", "kind" : "case class"}], "Red" : [{"name" : "Red.Character", "shortDescription" : "An \"ordinary\" character, char was typed in the component.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "Red.Character.toString", "link" : "Red\/Character.html#toString():String", "kind" : "def"}, {"member" : "Red.Character#<init>", "error" : "unsupported entity"}, {"label" : "mods", "tail" : ": Detail", "member" : "Red.Character.mods", "link" : "Red\/Character.html#mods:Red.UserInputDetail.Detail", "kind" : "val"}, {"label" : "location", "tail" : ": scala.swing.event.Key.Location.Value", "member" : "Red.Character.location", "link" : "Red\/Character.html#location:scala.swing.event.Key.Location.Value", "kind" : "val"}, {"label" : "char", "tail" : ": Char", "member" : "Red.Character.char", "link" : "Red\/Character.html#char:Char", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/Character.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Character.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Character.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Character.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Character.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Character.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Character.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Character.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Character.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Character.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Character.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Character.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Character.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Character.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Character.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Character.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Character.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/Character.html", "kind" : "case class"}, {"name" : "Red.CursorChanged", "shortDescription" : "The cursor changed", "members_case class" : [{"member" : "Red.CursorChanged#<init>", "error" : "unsupported entity"}, {"label" : "cursorCol", "tail" : ": Int", "member" : "Red.CursorChanged.cursorCol", "link" : "Red\/CursorChanged.html#cursorCol:Int", "kind" : "val"}, {"label" : "cursorRow", "tail" : ": Int", "member" : "Red.CursorChanged.cursorRow", "link" : "Red\/CursorChanged.html#cursorRow:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/CursorChanged.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/CursorChanged.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/CursorChanged.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/CursorChanged.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/CursorChanged.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/CursorChanged.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/CursorChanged.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/CursorChanged.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/CursorChanged.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/CursorChanged.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/CursorChanged.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/CursorChanged.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/CursorChanged.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/CursorChanged.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/CursorChanged.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/CursorChanged.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/CursorChanged.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/CursorChanged.html", "kind" : "case class"}, {"name" : "Red.Cut", "shortDescription" : "Representation of text that has been cut\/deleted\/copied in an editingsession.", "members_case class" : [{"label" : "merge", "tail" : "(next: Cut): Cut", "member" : "Red.Cut.merge", "link" : "Red\/Cut.html#merge(next:Red.Cut):Red.Cut", "kind" : "def"}, {"member" : "Red.Cut#<init>", "error" : "unsupported entity"}, {"label" : "generation", "tail" : ": Long", "member" : "Red.Cut.generation", "link" : "Red\/Cut.html#generation:Long", "kind" : "val"}, {"label" : "cursor", "tail" : ": Int", "member" : "Red.Cut.cursor", "link" : "Red\/Cut.html#cursor:Int", "kind" : "val"}, {"label" : "extent", "tail" : ": Int", "member" : "Red.Cut.extent", "link" : "Red\/Cut.html#extent:Int", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "Red.Cut.text", "link" : "Red\/Cut.html#text:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/Cut.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Cut.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Cut.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Cut.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Cut.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Cut.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Cut.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Cut.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Cut.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Cut.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Cut.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Cut.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Cut.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Cut.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Cut.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Cut.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Cut.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/Cut.html", "kind" : "case class"}, {"name" : "Red.Document", "shortDescription" : "An implementation of DocumentInterface.", "object" : "Red\/Document$.html", "members_class" : [{"label" : "repString", "tail" : "(): String", "member" : "Red.Document.repString", "link" : "Red\/Document.html#repString:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Red.Document.toString", "link" : "Red\/Document.html#toString():String", "kind" : "def"}, {"label" : "character", "tail" : "(i: Int): Char", "member" : "Red.Document.character", "link" : "Red\/Document.html#character(i:Int):Char", "kind" : "def"}, {"label" : "NONE", "tail" : ": Char", "member" : "Red.Document.NONE", "link" : "Red\/Document.html#NONE:Char", "kind" : "val"}, {"label" : "findNext", "tail" : "(bdy: (Char, Char) => Boolean, from: Int, to: Int): Option[Int]", "member" : "Red.Document.findNext", "link" : "Red\/Document.html#findNext(bdy:(Char,Char)=>Boolean,from:Int,to:Int):Option[Int]", "kind" : "def"}, {"label" : "findPrev", "tail" : "(bdy: (Char, Char) => Boolean, from: Int, to: Int): Option[Int]", "member" : "Red.Document.findPrev", "link" : "Red\/Document.html#findPrev(bdy:(Char,Char)=>Boolean,from:Int,to:Int):Option[Int]", "kind" : "def"}, {"label" : "delete", "tail" : "(position: Int, count: Int): Unit", "member" : "Red.Document.delete", "link" : "Red\/Document.html#delete(position:Int,count:Int):Unit", "kind" : "def"}, {"label" : "delete", "tail" : "(position: Int): Unit", "member" : "Red.Document.delete", "link" : "Red\/Document.html#delete(position:Int):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, ch: Char): Int", "member" : "Red.Document.insert", "link" : "Red\/Document.html#insert(position:Int,ch:Char):Int", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, string: String): Int", "member" : "Red.Document.insert", "link" : "Red\/Document.html#insert(position:Int,string:String):Int", "kind" : "def"}, {"label" : "writeTo", "tail" : "(out: BufferedWriter): Unit", "member" : "Red.Document.writeTo", "link" : "Red\/Document.html#writeTo(out:java.io.BufferedWriter):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, source: Reader, isLoad: Boolean): Int", "member" : "Red.Document.insert", "link" : "Red\/Document.html#insert(position:Int,source:java.io.Reader,isLoad:Boolean):Int", "kind" : "def"}, {"label" : "getLine", "tail" : "(lineNo: Int, fromColumn: Int): String", "member" : "Red.Document.getLine", "link" : "Red\/Document.html#getLine(lineNo:Int,fromColumn:Int):String", "kind" : "def"}, {"label" : "getLine", "tail" : "(lineNo: Int): String", "member" : "Red.Document.getLine", "link" : "Red\/Document.html#getLine(lineNo:Int):String", "kind" : "def"}, {"label" : "textLength", "tail" : "(): Int", "member" : "Red.Document.textLength", "link" : "Red\/Document.html#textLength:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "Red.Document.length", "link" : "Red\/Document.html#length:Int", "kind" : "def"}, {"label" : "getString", "tail" : "(left: Int, right: Int): String", "member" : "Red.Document.getString", "link" : "Red\/Document.html#getString(left:Int,right:Int):String", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "Red.Document.clear", "link" : "Red\/Document.html#clear():Unit", "kind" : "def"}, {"label" : "positionToCoordinates", "tail" : "(position: Int): (Int, Int)", "member" : "Red.Document.positionToCoordinates", "link" : "Red\/Document.html#positionToCoordinates(position:Int):(Int,Int)", "kind" : "def"}, {"label" : "coordinatesToPosition", "tail" : "(row: Int, col: Int): Int", "member" : "Red.Document.coordinatesToPosition", "link" : "Red\/Document.html#coordinatesToPosition(row:Int,col:Int):Int", "kind" : "def"}, {"label" : "hasChanged", "tail" : "(): Boolean", "member" : "Red.Document.hasChanged", "link" : "Red\/Document.html#hasChanged:Boolean", "kind" : "def"}, {"label" : "generation", "tail" : "(): Long", "member" : "Red.Document.generation", "link" : "Red\/Document.html#generation:Long", "kind" : "def"}, {"label" : "lineIndex", "tail" : ": TextBufferIndex", "member" : "Red.Document.lineIndex", "link" : "Red\/Document.html#lineIndex:Red.TextBufferIndex", "kind" : "val"}, {"label" : "characters", "tail" : ": TextBuffer", "member" : "Red.Document.characters", "link" : "Red\/Document.html#characters:Red.TextBuffer", "kind" : "val"}, {"member" : "Red.Document#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Document.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Document.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Document.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Document.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Document.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Document.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Document.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Document.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Document.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Document.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Document.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/Document.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Document.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Document.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/Document.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Document.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Document.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Document.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "END", "tail" : ": Char", "member" : "Red.Document.END", "link" : "Red\/Document$.html#END:Char", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Red\/Document$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Red\/Document$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Red\/Document$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Red\/Document$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Red\/Document$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Red\/Document$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Red\/Document$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Red\/Document$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Red\/Document$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Red\/Document$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Red\/Document$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Red\/Document$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Red\/Document$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Red\/Document$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Red\/Document$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Red\/Document$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Document$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Document$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Document$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Document$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Document$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Document$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Document$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Document$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Document$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Document$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Document$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/Document$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Document$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Document$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/Document$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Document$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Document$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Document$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/Document.html", "kind" : "class"}, {"name" : "Red.DocumentChanged", "shortDescription" : "Something has changed within the document being edited.", "object" : "Red\/DocumentChanged$.html", "members_object" : [{"label" : "apply", "tail" : "(cursor: (Int, Int)): DocumentEvent", "member" : "Red.DocumentChanged.apply", "link" : "Red\/DocumentChanged$.html#apply(cursor:(Int,Int)):Red.DocumentEvent", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/DocumentChanged$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/DocumentChanged$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/DocumentChanged$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/DocumentChanged$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/DocumentChanged$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/DocumentChanged$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentChanged$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentChanged$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentChanged$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/DocumentChanged$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/DocumentChanged$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/DocumentChanged$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/DocumentChanged$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/DocumentChanged$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/DocumentChanged$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/DocumentChanged$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/DocumentChanged$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/DocumentChanged$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/DocumentChanged$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Red.DocumentEvent", "shortDescription" : " An EditingSession notifies  interested handlers, in particular DocumentViews, of these events.", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/DocumentEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/DocumentEvent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/DocumentEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/DocumentEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/DocumentEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/DocumentEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/DocumentEvent.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/DocumentEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/DocumentEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/DocumentEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/DocumentEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/DocumentEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/DocumentEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/DocumentEvent.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/DocumentEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/DocumentEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/DocumentEvent.html", "kind" : "class"}, {"name" : "Red.DocumentInterface", "trait" : "Red\/DocumentInterface.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/DocumentInterface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/DocumentInterface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/DocumentInterface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/DocumentInterface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/DocumentInterface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/DocumentInterface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentInterface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentInterface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentInterface.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/DocumentInterface.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/DocumentInterface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/DocumentInterface.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/DocumentInterface.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/DocumentInterface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/DocumentInterface.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/DocumentInterface.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/DocumentInterface.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/DocumentInterface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/DocumentInterface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "characters", "tail" : "(): CharSequence", "member" : "Red.DocumentInterface.characters", "link" : "Red\/DocumentInterface.html#characters:CharSequence", "kind" : "abstract def"}, {"label" : "character", "tail" : "(i: Int): Char", "member" : "Red.DocumentInterface.character", "link" : "Red\/DocumentInterface.html#character(i:Int):Char", "kind" : "abstract def"}, {"label" : "NONE", "tail" : ": Char", "member" : "Red.DocumentInterface.NONE", "link" : "Red\/DocumentInterface.html#NONE:Char", "kind" : "abstract val"}, {"label" : "getLine", "tail" : "(lineNo: Int, fromColumn: Int): String", "member" : "Red.DocumentInterface.getLine", "link" : "Red\/DocumentInterface.html#getLine(lineNo:Int,fromColumn:Int):String", "kind" : "abstract def"}, {"label" : "getLine", "tail" : "(lineNo: Int): String", "member" : "Red.DocumentInterface.getLine", "link" : "Red\/DocumentInterface.html#getLine(lineNo:Int):String", "kind" : "abstract def"}, {"label" : "textLength", "tail" : "(): Int", "member" : "Red.DocumentInterface.textLength", "link" : "Red\/DocumentInterface.html#textLength:Int", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "Red.DocumentInterface.length", "link" : "Red\/DocumentInterface.html#length:Int", "kind" : "abstract def"}, {"label" : "getString", "tail" : "(start: Int, end: Int): String", "member" : "Red.DocumentInterface.getString", "link" : "Red\/DocumentInterface.html#getString(start:Int,end:Int):String", "kind" : "abstract def"}, {"label" : "findNext", "tail" : "(boundary: (Char, Char) => Boolean, from: Int, to: Int): Option[Int]", "member" : "Red.DocumentInterface.findNext", "link" : "Red\/DocumentInterface.html#findNext(boundary:(Char,Char)=>Boolean,from:Int,to:Int):Option[Int]", "kind" : "abstract def"}, {"label" : "findPrev", "tail" : "(boundary: (Char, Char) => Boolean, from: Int, to: Int): Option[Int]", "member" : "Red.DocumentInterface.findPrev", "link" : "Red\/DocumentInterface.html#findPrev(boundary:(Char,Char)=>Boolean,from:Int,to:Int):Option[Int]", "kind" : "abstract def"}, {"label" : "positionToCoordinates", "tail" : "(position: Int): (Int, Int)", "member" : "Red.DocumentInterface.positionToCoordinates", "link" : "Red\/DocumentInterface.html#positionToCoordinates(position:Int):(Int,Int)", "kind" : "abstract def"}, {"label" : "generation", "tail" : "(): Long", "member" : "Red.DocumentInterface.generation", "link" : "Red\/DocumentInterface.html#generation:Long", "kind" : "abstract def"}, {"label" : "hasChanged", "tail" : "(): Boolean", "member" : "Red.DocumentInterface.hasChanged", "link" : "Red\/DocumentInterface.html#hasChanged:Boolean", "kind" : "abstract def"}, {"label" : "delete", "tail" : "(position: Int, count: Int): Unit", "member" : "Red.DocumentInterface.delete", "link" : "Red\/DocumentInterface.html#delete(position:Int,count:Int):Unit", "kind" : "abstract def"}, {"label" : "delete", "tail" : "(position: Int): Unit", "member" : "Red.DocumentInterface.delete", "link" : "Red\/DocumentInterface.html#delete(position:Int):Unit", "kind" : "abstract def"}, {"label" : "insert", "tail" : "(position: Int, ch: Char): Int", "member" : "Red.DocumentInterface.insert", "link" : "Red\/DocumentInterface.html#insert(position:Int,ch:Char):Int", "kind" : "abstract def"}, {"label" : "insert", "tail" : "(position: Int, string: String): Int", "member" : "Red.DocumentInterface.insert", "link" : "Red\/DocumentInterface.html#insert(position:Int,string:String):Int", "kind" : "abstract def"}, {"label" : "writeTo", "tail" : "(out: BufferedWriter): Unit", "member" : "Red.DocumentInterface.writeTo", "link" : "Red\/DocumentInterface.html#writeTo(out:java.io.BufferedWriter):Unit", "kind" : "abstract def"}, {"label" : "insert", "tail" : "(position: Int, source: Reader, isLoad: Boolean): Int", "member" : "Red.DocumentInterface.insert", "link" : "Red\/DocumentInterface.html#insert(position:Int,source:java.io.Reader,isLoad:Boolean):Int", "kind" : "abstract def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "Red.DocumentInterface.clear", "link" : "Red\/DocumentInterface.html#clear():Unit", "kind" : "abstract def"}, {"label" : "coordinatesToPosition", "tail" : "(row: Int, col: Int): Int", "member" : "Red.DocumentInterface.coordinatesToPosition", "link" : "Red\/DocumentInterface.html#coordinatesToPosition(row:Int,col:Int):Int", "kind" : "abstract def"}], "shortDescription" : "A structure that represents a sequence of \"lines\", in which the last \"line\"is not necessarily terminated by a newline character."}, {"name" : "Red.DocumentView", "shortDescription" : "A component that continuously displays the state of the given editing session.", "object" : "Red\/DocumentView$.html", "members_class" : [{"label" : "Content", "tail" : "", "member" : "scala.swing.Container.Wrapper.Content", "link" : "Red\/DocumentView.html#ContentextendsBufferWrapper[scala.swing.Component]", "kind" : "class"}, {"label" : "SuperMixin", "tail" : "", "member" : "scala.swing.Component.SuperMixin", "link" : "Red\/DocumentView.html#SuperMixinextendsJComponent", "kind" : "trait"}, {"label" : "mouseWheel", "tail" : "(rotation: Int, mods: Detail): Unit", "member" : "Red.DocumentView.mouseWheel", "link" : "Red\/DocumentView.html#mouseWheel(rotation:Int,mods:Red.UserInputDetail.Detail):Unit", "kind" : "def"}, {"label" : "componentResized", "tail" : "(): Unit", "member" : "Red.DocumentView.componentResized", "link" : "Red\/DocumentView.html#componentResized():Unit", "kind" : "def"}, {"label" : "viewToModel", "tail" : "(pointerLocation: Point): (Int, Int)", "member" : "Red.DocumentView.viewToModel", "link" : "Red\/DocumentView.html#viewToModel(pointerLocation:swing.Point):(Int,Int)", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Dimension", "member" : "Red.DocumentView.defaultSize", "link" : "Red\/DocumentView.html#defaultSize():swing.Dimension", "kind" : "def"}, {"label" : "isVisible", "tail" : "(row: Int, col: Int): Boolean", "member" : "Red.DocumentView.isVisible", "link" : "Red\/DocumentView.html#isVisible(row:Int,col:Int):Boolean", "kind" : "def"}, {"label" : "drawCursorShape", "tail" : "(g: Graphics2D, color: Color, row: Int, col: Int, width: Int): Unit", "member" : "Red.DocumentView.drawCursorShape", "link" : "Red\/DocumentView.html#drawCursorShape(g:java.awt.Graphics2D,color:java.awt.Color,row:Int,col:Int,width:Int):Unit", "kind" : "def"}, {"label" : "paintComponent", "tail" : "(g: Graphics2D): Unit", "member" : "Red.DocumentView.paintComponent", "link" : "Red\/DocumentView.html#paintComponent(g:java.awt.Graphics2D):Unit", "kind" : "def"}, {"label" : "recomputeOrigin", "tail" : "(newCursorRow: Int, newCursorCol: Int): Unit", "member" : "Red.DocumentView.recomputeOrigin", "link" : "Red\/DocumentView.html#recomputeOrigin(newCursorRow:Int,newCursorCol:Int):Unit", "kind" : "def"}, {"label" : "hborder_=", "tail" : "(px: Int): Unit", "member" : "Red.DocumentView.hborder_=", "link" : "Red\/DocumentView.html#hborder_=(px:Int):Unit", "kind" : "def"}, {"label" : "viewLineNumbers", "tail" : "(columns: Int): Unit", "member" : "Red.DocumentView.viewLineNumbers", "link" : "Red\/DocumentView.html#viewLineNumbers(columns:Int):Unit", "kind" : "def"}, {"member" : "Red.DocumentView#<init>", "error" : "unsupported entity"}, {"label" : "font", "tail" : ": Font", "member" : "Red.DocumentView.font", "link" : "Red\/DocumentView.html#font:swing.Font", "kind" : "val"}, {"label" : "theSession", "tail" : ": Session", "member" : "Red.DocumentView.theSession", "link" : "Red\/DocumentView.html#theSession:Red.Session", "kind" : "val"}, {"label" : "mouseExited", "tail" : "(): Unit", "member" : "Red.InputPanel.mouseExited", "link" : "Red\/DocumentView.html#mouseExited():Unit", "kind" : "def"}, {"label" : "mouseEntered", "tail" : "(): Unit", "member" : "Red.InputPanel.mouseEntered", "link" : "Red\/DocumentView.html#mouseEntered():Unit", "kind" : "def"}, {"label" : "focusChanged", "tail" : "(hasFocus: Boolean): Unit", "member" : "Red.InputPanel.focusChanged", "link" : "Red\/DocumentView.html#focusChanged(hasFocus:Boolean):Unit", "kind" : "def"}, {"label" : "UnfocussedCursorImage", "tail" : ": Cursor", "member" : "Red.InputPanel.UnfocussedCursorImage", "link" : "Red\/DocumentView.html#UnfocussedCursorImage:java.awt.Cursor", "kind" : "val"}, {"label" : "FocussedCursorImage", "tail" : ": Cursor", "member" : "Red.InputPanel.FocussedCursorImage", "link" : "Red\/DocumentView.html#FocussedCursorImage:java.awt.Cursor", "kind" : "val"}, {"label" : "altKeyChar", "tail" : ": Map[Int, Char]", "member" : "Red.InputPanel.altKeyChar", "link" : "Red\/DocumentView.html#altKeyChar:scala.collection.mutable.Map[Int,Char]", "kind" : "var"}, {"label" : "mouseInput", "tail" : ": Notifier[UserInput]", "member" : "Red.InputPanel.mouseInput", "link" : "Red\/DocumentView.html#mouseInput:Red.Notifier[Red.UserInput]", "kind" : "val"}, {"label" : "keystrokeInput", "tail" : ": Notifier[UserInput]", "member" : "Red.InputPanel.keystrokeInput", "link" : "Red\/DocumentView.html#keystrokeInput:Red.Notifier[Red.UserInput]", "kind" : "val"}, {"label" : "numpadAsCommand", "tail" : ": Boolean", "member" : "Red.InputPanel.numpadAsCommand", "link" : "Red\/DocumentView.html#numpadAsCommand:Boolean", "kind" : "var"}, {"label" : "peer", "tail" : ": JPanel", "member" : "Red.InputPanel.peer", "link" : "Red\/DocumentView.html#peer:javax.swing.JPanel", "kind" : "lazy val"}, {"label" : "mergeMouseInput", "tail" : ": Boolean", "member" : "Red.InputPanel.mergeMouseInput", "link" : "Red\/DocumentView.html#mergeMouseInput:Boolean", "kind" : "val"}, {"label" : "mapMeta", "tail" : ": Boolean", "member" : "Red.InputPanel.mapMeta", "link" : "Red\/DocumentView.html#mapMeta:Boolean", "kind" : "val"}, {"label" : "numPadAsCommand", "tail" : ": Boolean", "member" : "Red.InputPanel.numPadAsCommand", "link" : "Red\/DocumentView.html#numPadAsCommand:Boolean", "kind" : "val"}, {"label" : "contents", "tail" : "(): Seq[Component]", "member" : "scala.swing.Container.Wrapper.contents", "link" : "Red\/DocumentView.html#contents:scala.collection.Seq[scala.swing.Component]", "kind" : "def"}, {"label" : "_contents", "tail" : ": Content", "member" : "scala.swing.Container.Wrapper._contents", "link" : "Red\/DocumentView.html#_contents:Wrapper.this.Content", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.swing.Component.toString", "link" : "Red\/DocumentView.html#toString():String", "kind" : "def"}, {"label" : "paint", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paint", "link" : "Red\/DocumentView.html#paint(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintChildren", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintChildren", "link" : "Red\/DocumentView.html#paintChildren(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintBorder", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintBorder", "link" : "Red\/DocumentView.html#paintBorder(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "revalidate", "tail" : "(): Unit", "member" : "scala.swing.Component.revalidate", "link" : "Red\/DocumentView.html#revalidate():Unit", "kind" : "def"}, {"label" : "onFirstSubscribe", "tail" : "(): Unit", "member" : "scala.swing.Component.onFirstSubscribe", "link" : "Red\/DocumentView.html#onFirstSubscribe():Unit", "kind" : "def"}, {"label" : "hasFocus", "tail" : "(): Boolean", "member" : "scala.swing.Component.hasFocus", "link" : "Red\/DocumentView.html#hasFocus:Boolean", "kind" : "def"}, {"label" : "requestFocusInWindow", "tail" : "(): Boolean", "member" : "scala.swing.Component.requestFocusInWindow", "link" : "Red\/DocumentView.html#requestFocusInWindow():Boolean", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scala.swing.Component.requestFocus", "link" : "Red\/DocumentView.html#requestFocus():Unit", "kind" : "def"}, {"label" : "focusable_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.focusable_=", "link" : "Red\/DocumentView.html#focusable_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "focusable", "tail" : "(): Boolean", "member" : "scala.swing.Component.focusable", "link" : "Red\/DocumentView.html#focusable:Boolean", "kind" : "def"}, {"label" : "inputVerifier_=", "tail" : "(v: (Component) => Boolean): Unit", "member" : "scala.swing.Component.inputVerifier_=", "link" : "Red\/DocumentView.html#inputVerifier_=(v:scala.swing.Component=>Boolean):Unit", "kind" : "def"}, {"label" : "inputVerifier", "tail" : "(): (Component) => Boolean", "member" : "scala.swing.Component.inputVerifier", "link" : "Red\/DocumentView.html#inputVerifier:scala.swing.Component=>Boolean", "kind" : "def"}, {"label" : "tooltip_=", "tail" : "(t: String): Unit", "member" : "scala.swing.Component.tooltip_=", "link" : "Red\/DocumentView.html#tooltip_=(t:String):Unit", "kind" : "def"}, {"label" : "tooltip", "tail" : "(): String", "member" : "scala.swing.Component.tooltip", "link" : "Red\/DocumentView.html#tooltip:String", "kind" : "def"}, {"label" : "enabled_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.enabled_=", "link" : "Red\/DocumentView.html#enabled_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "enabled", "tail" : "(): Boolean", "member" : "scala.swing.Component.enabled", "link" : "Red\/DocumentView.html#enabled:Boolean", "kind" : "def"}, {"label" : "opaque_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.opaque_=", "link" : "Red\/DocumentView.html#opaque_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "opaque", "tail" : "(): Boolean", "member" : "scala.swing.Component.opaque", "link" : "Red\/DocumentView.html#opaque:Boolean", "kind" : "def"}, {"label" : "border_=", "tail" : "(b: Border): Unit", "member" : "scala.swing.Component.border_=", "link" : "Red\/DocumentView.html#border_=(b:javax.swing.border.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): Border", "member" : "scala.swing.Component.border", "link" : "Red\/DocumentView.html#border:javax.swing.border.Border", "kind" : "def"}, {"label" : "yLayoutAlignment_=", "tail" : "(y: Double): Unit", "member" : "scala.swing.Component.yLayoutAlignment_=", "link" : "Red\/DocumentView.html#yLayoutAlignment_=(y:Double):Unit", "kind" : "def"}, {"label" : "yLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.yLayoutAlignment", "link" : "Red\/DocumentView.html#yLayoutAlignment:Double", "kind" : "def"}, {"label" : "xLayoutAlignment_=", "tail" : "(x: Double): Unit", "member" : "scala.swing.Component.xLayoutAlignment_=", "link" : "Red\/DocumentView.html#xLayoutAlignment_=(x:Double):Unit", "kind" : "def"}, {"label" : "xLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.xLayoutAlignment", "link" : "Red\/DocumentView.html#xLayoutAlignment:Double", "kind" : "def"}, {"label" : "name_=", "tail" : "(s: String): Unit", "member" : "scala.swing.Component.name_=", "link" : "Red\/DocumentView.html#name_=(s:String):Unit", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.swing.Component.name", "link" : "Red\/DocumentView.html#name:String", "kind" : "def"}, {"label" : "onLastUnsubscribe", "tail" : "(): Unit", "member" : "scala.swing.UIElement.onLastUnsubscribe", "link" : "Red\/DocumentView.html#onLastUnsubscribe():Unit", "kind" : "def"}, {"label" : "ignoreRepaint_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.ignoreRepaint_=", "link" : "Red\/DocumentView.html#ignoreRepaint_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "ignoreRepaint", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.ignoreRepaint", "link" : "Red\/DocumentView.html#ignoreRepaint:Boolean", "kind" : "def"}, {"label" : "repaint", "tail" : "(rect: Rectangle): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Red\/DocumentView.html#repaint(rect:scala.swing.Rectangle):Unit", "kind" : "def"}, {"label" : "repaint", "tail" : "(): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Red\/DocumentView.html#repaint():Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(): Unit", "member" : "scala.swing.UIElement.validate", "link" : "Red\/DocumentView.html#validate():Unit", "kind" : "def"}, {"label" : "displayable", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.displayable", "link" : "Red\/DocumentView.html#displayable:Boolean", "kind" : "def"}, {"label" : "showing", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.showing", "link" : "Red\/DocumentView.html#showing:Boolean", "kind" : "def"}, {"label" : "visible_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.visible_=", "link" : "Red\/DocumentView.html#visible_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.visible", "link" : "Red\/DocumentView.html#visible:Boolean", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(c: Cursor): Unit", "member" : "scala.swing.UIElement.cursor_=", "link" : "Red\/DocumentView.html#cursor_=(c:java.awt.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Cursor", "member" : "scala.swing.UIElement.cursor", "link" : "Red\/DocumentView.html#cursor:java.awt.Cursor", "kind" : "def"}, {"label" : "toolkit", "tail" : "(): Toolkit", "member" : "scala.swing.UIElement.toolkit", "link" : "Red\/DocumentView.html#toolkit:java.awt.Toolkit", "kind" : "def"}, {"label" : "locale", "tail" : "(): Locale", "member" : "scala.swing.UIElement.locale", "link" : "Red\/DocumentView.html#locale:java.util.Locale", "kind" : "def"}, {"label" : "size", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.size", "link" : "Red\/DocumentView.html#size:scala.swing.Dimension", "kind" : "def"}, {"label" : "bounds", "tail" : "(): Rectangle", "member" : "scala.swing.UIElement.bounds", "link" : "Red\/DocumentView.html#bounds:scala.swing.Rectangle", "kind" : "def"}, {"label" : "location", "tail" : "(): Point", "member" : "scala.swing.UIElement.location", "link" : "Red\/DocumentView.html#location:scala.swing.Point", "kind" : "def"}, {"label" : "locationOnScreen", "tail" : "(): Point", "member" : "scala.swing.UIElement.locationOnScreen", "link" : "Red\/DocumentView.html#locationOnScreen:scala.swing.Point", "kind" : "def"}, {"label" : "font_=", "tail" : "(f: Font): Unit", "member" : "scala.swing.UIElement.font_=", "link" : "Red\/DocumentView.html#font_=(f:scala.swing.Font):Unit", "kind" : "def"}, {"label" : "componentOrientation_=", "tail" : "(x: ComponentOrientation): Unit", "member" : "scala.swing.UIElement.componentOrientation_=", "link" : "Red\/DocumentView.html#componentOrientation_=(x:java.awt.ComponentOrientation):Unit", "kind" : "def"}, {"label" : "componentOrientation", "tail" : "(): ComponentOrientation", "member" : "scala.swing.UIElement.componentOrientation", "link" : "Red\/DocumentView.html#componentOrientation:java.awt.ComponentOrientation", "kind" : "def"}, {"label" : "preferredSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.preferredSize_=", "link" : "Red\/DocumentView.html#preferredSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "preferredSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.preferredSize", "link" : "Red\/DocumentView.html#preferredSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "maximumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.maximumSize_=", "link" : "Red\/DocumentView.html#maximumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "maximumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.maximumSize", "link" : "Red\/DocumentView.html#maximumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "minimumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.minimumSize_=", "link" : "Red\/DocumentView.html#minimumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "minimumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.minimumSize", "link" : "Red\/DocumentView.html#minimumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "background_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.background_=", "link" : "Red\/DocumentView.html#background_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): Color", "member" : "scala.swing.UIElement.background", "link" : "Red\/DocumentView.html#background:scala.swing.Color", "kind" : "def"}, {"label" : "foreground_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.foreground_=", "link" : "Red\/DocumentView.html#foreground_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "foreground", "tail" : "(): Color", "member" : "scala.swing.UIElement.foreground", "link" : "Red\/DocumentView.html#foreground:scala.swing.Color", "kind" : "def"}, {"label" : "self", "tail" : "(): Any", "member" : "scala.swing.UIElement.self", "link" : "Red\/DocumentView.html#self:Any", "kind" : "def"}, {"label" : "unsubscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.unsubscribe", "link" : "Red\/DocumentView.html#unsubscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "subscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.subscribe", "link" : "Red\/DocumentView.html#subscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "publish", "tail" : "(e: Event): Unit", "member" : "scala.swing.Publisher.publish", "link" : "Red\/DocumentView.html#publish(e:scala.swing.event.Event):Unit", "kind" : "def"}, {"label" : "listeners", "tail" : ": RefSet[Reaction]", "member" : "scala.swing.Publisher.listeners", "link" : "Red\/DocumentView.html#listeners:scala.swing.RefSet[scala.swing.Reactions.Reaction]", "kind" : "val"}, {"label" : "deafTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.deafTo", "link" : "Red\/DocumentView.html#deafTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.listenTo", "link" : "Red\/DocumentView.html#listenTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "reactions", "tail" : ": Reactions", "member" : "scala.swing.Reactor.reactions", "link" : "Red\/DocumentView.html#reactions:scala.swing.Reactions", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.Proxy.equals", "link" : "Red\/DocumentView.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Proxy.hashCode", "link" : "Red\/DocumentView.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/DocumentView.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/DocumentView.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/DocumentView.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/DocumentView.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/DocumentView.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/DocumentView.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentView.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentView.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentView.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/DocumentView.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/DocumentView.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/DocumentView.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/DocumentView.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/DocumentView.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/DocumentView.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/DocumentView.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Red\/DocumentView$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Red\/DocumentView$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Red\/DocumentView$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Red\/DocumentView$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Red\/DocumentView$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Red\/DocumentView$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Red\/DocumentView$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Red\/DocumentView$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Red\/DocumentView$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Red\/DocumentView$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Red\/DocumentView$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Red\/DocumentView$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Red\/DocumentView$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Red\/DocumentView$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Red\/DocumentView$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Red\/DocumentView$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/DocumentView$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/DocumentView$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/DocumentView$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/DocumentView$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/DocumentView$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/DocumentView$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentView$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentView$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/DocumentView$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/DocumentView$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/DocumentView$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/DocumentView$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/DocumentView$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/DocumentView$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/DocumentView$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/DocumentView$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/DocumentView$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/DocumentView$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/DocumentView.html", "kind" : "class"}, {"name" : "Red.InputPanel", "shortDescription" : "A Panel that:", "object" : "Red\/InputPanel$.html", "members_class" : [{"label" : "Content", "tail" : "", "member" : "scala.swing.Container.Wrapper.Content", "link" : "Red\/InputPanel.html#ContentextendsBufferWrapper[scala.swing.Component]", "kind" : "class"}, {"label" : "SuperMixin", "tail" : "", "member" : "scala.swing.Component.SuperMixin", "link" : "Red\/InputPanel.html#SuperMixinextendsJComponent", "kind" : "trait"}, {"label" : "mouseExited", "tail" : "(): Unit", "member" : "Red.InputPanel.mouseExited", "link" : "Red\/InputPanel.html#mouseExited():Unit", "kind" : "def"}, {"label" : "mouseEntered", "tail" : "(): Unit", "member" : "Red.InputPanel.mouseEntered", "link" : "Red\/InputPanel.html#mouseEntered():Unit", "kind" : "def"}, {"label" : "focusChanged", "tail" : "(hasFocus: Boolean): Unit", "member" : "Red.InputPanel.focusChanged", "link" : "Red\/InputPanel.html#focusChanged(hasFocus:Boolean):Unit", "kind" : "def"}, {"label" : "UnfocussedCursorImage", "tail" : ": Cursor", "member" : "Red.InputPanel.UnfocussedCursorImage", "link" : "Red\/InputPanel.html#UnfocussedCursorImage:java.awt.Cursor", "kind" : "val"}, {"label" : "FocussedCursorImage", "tail" : ": Cursor", "member" : "Red.InputPanel.FocussedCursorImage", "link" : "Red\/InputPanel.html#FocussedCursorImage:java.awt.Cursor", "kind" : "val"}, {"label" : "altKeyChar", "tail" : ": Map[Int, Char]", "member" : "Red.InputPanel.altKeyChar", "link" : "Red\/InputPanel.html#altKeyChar:scala.collection.mutable.Map[Int,Char]", "kind" : "var"}, {"label" : "mouseInput", "tail" : ": Notifier[UserInput]", "member" : "Red.InputPanel.mouseInput", "link" : "Red\/InputPanel.html#mouseInput:Red.Notifier[Red.UserInput]", "kind" : "val"}, {"label" : "keystrokeInput", "tail" : ": Notifier[UserInput]", "member" : "Red.InputPanel.keystrokeInput", "link" : "Red\/InputPanel.html#keystrokeInput:Red.Notifier[Red.UserInput]", "kind" : "val"}, {"label" : "numpadAsCommand", "tail" : ": Boolean", "member" : "Red.InputPanel.numpadAsCommand", "link" : "Red\/InputPanel.html#numpadAsCommand:Boolean", "kind" : "var"}, {"label" : "peer", "tail" : ": JPanel", "member" : "Red.InputPanel.peer", "link" : "Red\/InputPanel.html#peer:javax.swing.JPanel", "kind" : "lazy val"}, {"member" : "Red.InputPanel#<init>", "error" : "unsupported entity"}, {"label" : "mergeMouseInput", "tail" : ": Boolean", "member" : "Red.InputPanel.mergeMouseInput", "link" : "Red\/InputPanel.html#mergeMouseInput:Boolean", "kind" : "val"}, {"label" : "mapMeta", "tail" : ": Boolean", "member" : "Red.InputPanel.mapMeta", "link" : "Red\/InputPanel.html#mapMeta:Boolean", "kind" : "val"}, {"label" : "numPadAsCommand", "tail" : ": Boolean", "member" : "Red.InputPanel.numPadAsCommand", "link" : "Red\/InputPanel.html#numPadAsCommand:Boolean", "kind" : "val"}, {"label" : "contents", "tail" : "(): Seq[Component]", "member" : "scala.swing.Container.Wrapper.contents", "link" : "Red\/InputPanel.html#contents:scala.collection.Seq[scala.swing.Component]", "kind" : "def"}, {"label" : "_contents", "tail" : ": Content", "member" : "scala.swing.Container.Wrapper._contents", "link" : "Red\/InputPanel.html#_contents:Wrapper.this.Content", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.swing.Component.toString", "link" : "Red\/InputPanel.html#toString():String", "kind" : "def"}, {"label" : "paint", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paint", "link" : "Red\/InputPanel.html#paint(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintChildren", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintChildren", "link" : "Red\/InputPanel.html#paintChildren(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintBorder", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintBorder", "link" : "Red\/InputPanel.html#paintBorder(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintComponent", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintComponent", "link" : "Red\/InputPanel.html#paintComponent(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "revalidate", "tail" : "(): Unit", "member" : "scala.swing.Component.revalidate", "link" : "Red\/InputPanel.html#revalidate():Unit", "kind" : "def"}, {"label" : "onFirstSubscribe", "tail" : "(): Unit", "member" : "scala.swing.Component.onFirstSubscribe", "link" : "Red\/InputPanel.html#onFirstSubscribe():Unit", "kind" : "def"}, {"label" : "hasFocus", "tail" : "(): Boolean", "member" : "scala.swing.Component.hasFocus", "link" : "Red\/InputPanel.html#hasFocus:Boolean", "kind" : "def"}, {"label" : "requestFocusInWindow", "tail" : "(): Boolean", "member" : "scala.swing.Component.requestFocusInWindow", "link" : "Red\/InputPanel.html#requestFocusInWindow():Boolean", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scala.swing.Component.requestFocus", "link" : "Red\/InputPanel.html#requestFocus():Unit", "kind" : "def"}, {"label" : "focusable_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.focusable_=", "link" : "Red\/InputPanel.html#focusable_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "focusable", "tail" : "(): Boolean", "member" : "scala.swing.Component.focusable", "link" : "Red\/InputPanel.html#focusable:Boolean", "kind" : "def"}, {"label" : "inputVerifier_=", "tail" : "(v: (Component) => Boolean): Unit", "member" : "scala.swing.Component.inputVerifier_=", "link" : "Red\/InputPanel.html#inputVerifier_=(v:scala.swing.Component=>Boolean):Unit", "kind" : "def"}, {"label" : "inputVerifier", "tail" : "(): (Component) => Boolean", "member" : "scala.swing.Component.inputVerifier", "link" : "Red\/InputPanel.html#inputVerifier:scala.swing.Component=>Boolean", "kind" : "def"}, {"label" : "tooltip_=", "tail" : "(t: String): Unit", "member" : "scala.swing.Component.tooltip_=", "link" : "Red\/InputPanel.html#tooltip_=(t:String):Unit", "kind" : "def"}, {"label" : "tooltip", "tail" : "(): String", "member" : "scala.swing.Component.tooltip", "link" : "Red\/InputPanel.html#tooltip:String", "kind" : "def"}, {"label" : "enabled_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.enabled_=", "link" : "Red\/InputPanel.html#enabled_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "enabled", "tail" : "(): Boolean", "member" : "scala.swing.Component.enabled", "link" : "Red\/InputPanel.html#enabled:Boolean", "kind" : "def"}, {"label" : "opaque_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.opaque_=", "link" : "Red\/InputPanel.html#opaque_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "opaque", "tail" : "(): Boolean", "member" : "scala.swing.Component.opaque", "link" : "Red\/InputPanel.html#opaque:Boolean", "kind" : "def"}, {"label" : "border_=", "tail" : "(b: Border): Unit", "member" : "scala.swing.Component.border_=", "link" : "Red\/InputPanel.html#border_=(b:javax.swing.border.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): Border", "member" : "scala.swing.Component.border", "link" : "Red\/InputPanel.html#border:javax.swing.border.Border", "kind" : "def"}, {"label" : "yLayoutAlignment_=", "tail" : "(y: Double): Unit", "member" : "scala.swing.Component.yLayoutAlignment_=", "link" : "Red\/InputPanel.html#yLayoutAlignment_=(y:Double):Unit", "kind" : "def"}, {"label" : "yLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.yLayoutAlignment", "link" : "Red\/InputPanel.html#yLayoutAlignment:Double", "kind" : "def"}, {"label" : "xLayoutAlignment_=", "tail" : "(x: Double): Unit", "member" : "scala.swing.Component.xLayoutAlignment_=", "link" : "Red\/InputPanel.html#xLayoutAlignment_=(x:Double):Unit", "kind" : "def"}, {"label" : "xLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.xLayoutAlignment", "link" : "Red\/InputPanel.html#xLayoutAlignment:Double", "kind" : "def"}, {"label" : "name_=", "tail" : "(s: String): Unit", "member" : "scala.swing.Component.name_=", "link" : "Red\/InputPanel.html#name_=(s:String):Unit", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.swing.Component.name", "link" : "Red\/InputPanel.html#name:String", "kind" : "def"}, {"label" : "onLastUnsubscribe", "tail" : "(): Unit", "member" : "scala.swing.UIElement.onLastUnsubscribe", "link" : "Red\/InputPanel.html#onLastUnsubscribe():Unit", "kind" : "def"}, {"label" : "ignoreRepaint_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.ignoreRepaint_=", "link" : "Red\/InputPanel.html#ignoreRepaint_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "ignoreRepaint", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.ignoreRepaint", "link" : "Red\/InputPanel.html#ignoreRepaint:Boolean", "kind" : "def"}, {"label" : "repaint", "tail" : "(rect: Rectangle): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Red\/InputPanel.html#repaint(rect:scala.swing.Rectangle):Unit", "kind" : "def"}, {"label" : "repaint", "tail" : "(): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Red\/InputPanel.html#repaint():Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(): Unit", "member" : "scala.swing.UIElement.validate", "link" : "Red\/InputPanel.html#validate():Unit", "kind" : "def"}, {"label" : "displayable", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.displayable", "link" : "Red\/InputPanel.html#displayable:Boolean", "kind" : "def"}, {"label" : "showing", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.showing", "link" : "Red\/InputPanel.html#showing:Boolean", "kind" : "def"}, {"label" : "visible_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.visible_=", "link" : "Red\/InputPanel.html#visible_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.visible", "link" : "Red\/InputPanel.html#visible:Boolean", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(c: Cursor): Unit", "member" : "scala.swing.UIElement.cursor_=", "link" : "Red\/InputPanel.html#cursor_=(c:java.awt.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Cursor", "member" : "scala.swing.UIElement.cursor", "link" : "Red\/InputPanel.html#cursor:java.awt.Cursor", "kind" : "def"}, {"label" : "toolkit", "tail" : "(): Toolkit", "member" : "scala.swing.UIElement.toolkit", "link" : "Red\/InputPanel.html#toolkit:java.awt.Toolkit", "kind" : "def"}, {"label" : "locale", "tail" : "(): Locale", "member" : "scala.swing.UIElement.locale", "link" : "Red\/InputPanel.html#locale:java.util.Locale", "kind" : "def"}, {"label" : "size", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.size", "link" : "Red\/InputPanel.html#size:scala.swing.Dimension", "kind" : "def"}, {"label" : "bounds", "tail" : "(): Rectangle", "member" : "scala.swing.UIElement.bounds", "link" : "Red\/InputPanel.html#bounds:scala.swing.Rectangle", "kind" : "def"}, {"label" : "location", "tail" : "(): Point", "member" : "scala.swing.UIElement.location", "link" : "Red\/InputPanel.html#location:scala.swing.Point", "kind" : "def"}, {"label" : "locationOnScreen", "tail" : "(): Point", "member" : "scala.swing.UIElement.locationOnScreen", "link" : "Red\/InputPanel.html#locationOnScreen:scala.swing.Point", "kind" : "def"}, {"label" : "font_=", "tail" : "(f: Font): Unit", "member" : "scala.swing.UIElement.font_=", "link" : "Red\/InputPanel.html#font_=(f:scala.swing.Font):Unit", "kind" : "def"}, {"label" : "font", "tail" : "(): Font", "member" : "scala.swing.UIElement.font", "link" : "Red\/InputPanel.html#font:scala.swing.Font", "kind" : "def"}, {"label" : "componentOrientation_=", "tail" : "(x: ComponentOrientation): Unit", "member" : "scala.swing.UIElement.componentOrientation_=", "link" : "Red\/InputPanel.html#componentOrientation_=(x:java.awt.ComponentOrientation):Unit", "kind" : "def"}, {"label" : "componentOrientation", "tail" : "(): ComponentOrientation", "member" : "scala.swing.UIElement.componentOrientation", "link" : "Red\/InputPanel.html#componentOrientation:java.awt.ComponentOrientation", "kind" : "def"}, {"label" : "preferredSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.preferredSize_=", "link" : "Red\/InputPanel.html#preferredSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "preferredSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.preferredSize", "link" : "Red\/InputPanel.html#preferredSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "maximumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.maximumSize_=", "link" : "Red\/InputPanel.html#maximumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "maximumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.maximumSize", "link" : "Red\/InputPanel.html#maximumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "minimumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.minimumSize_=", "link" : "Red\/InputPanel.html#minimumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "minimumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.minimumSize", "link" : "Red\/InputPanel.html#minimumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "background_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.background_=", "link" : "Red\/InputPanel.html#background_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): Color", "member" : "scala.swing.UIElement.background", "link" : "Red\/InputPanel.html#background:scala.swing.Color", "kind" : "def"}, {"label" : "foreground_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.foreground_=", "link" : "Red\/InputPanel.html#foreground_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "foreground", "tail" : "(): Color", "member" : "scala.swing.UIElement.foreground", "link" : "Red\/InputPanel.html#foreground:scala.swing.Color", "kind" : "def"}, {"label" : "self", "tail" : "(): Any", "member" : "scala.swing.UIElement.self", "link" : "Red\/InputPanel.html#self:Any", "kind" : "def"}, {"label" : "unsubscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.unsubscribe", "link" : "Red\/InputPanel.html#unsubscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "subscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.subscribe", "link" : "Red\/InputPanel.html#subscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "publish", "tail" : "(e: Event): Unit", "member" : "scala.swing.Publisher.publish", "link" : "Red\/InputPanel.html#publish(e:scala.swing.event.Event):Unit", "kind" : "def"}, {"label" : "listeners", "tail" : ": RefSet[Reaction]", "member" : "scala.swing.Publisher.listeners", "link" : "Red\/InputPanel.html#listeners:scala.swing.RefSet[scala.swing.Reactions.Reaction]", "kind" : "val"}, {"label" : "deafTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.deafTo", "link" : "Red\/InputPanel.html#deafTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.listenTo", "link" : "Red\/InputPanel.html#listenTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "reactions", "tail" : ": Reactions", "member" : "scala.swing.Reactor.reactions", "link" : "Red\/InputPanel.html#reactions:scala.swing.Reactions", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.Proxy.equals", "link" : "Red\/InputPanel.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Proxy.hashCode", "link" : "Red\/InputPanel.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/InputPanel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/InputPanel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/InputPanel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/InputPanel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/InputPanel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/InputPanel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/InputPanel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/InputPanel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/InputPanel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/InputPanel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/InputPanel.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/InputPanel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/InputPanel.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/InputPanel.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/InputPanel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/InputPanel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mouseWheel", "tail" : "(rotation: Int, modifiers: Detail): Unit", "member" : "Red.InputPanel.mouseWheel", "link" : "Red\/InputPanel.html#mouseWheel(rotation:Int,modifiers:Red.UserInputDetail.Detail):Unit", "kind" : "abstract def"}, {"label" : "viewToModel", "tail" : "(location: Point): (Int, Int)", "member" : "Red.InputPanel.viewToModel", "link" : "Red\/InputPanel.html#viewToModel(location:java.awt.Point):(Int,Int)", "kind" : "abstract def"}, {"label" : "componentResized", "tail" : "(): Unit", "member" : "Red.InputPanel.componentResized", "link" : "Red\/InputPanel.html#componentResized():Unit", "kind" : "abstract def"}], "members_object" : [{"label" : "unshifted", "tail" : "(char: Int): Int", "member" : "Red.InputPanel.unshifted", "link" : "Red\/InputPanel$.html#unshifted(char:Int):Int", "kind" : "def"}, {"label" : "shifted", "tail" : "(char: Int, shifted: Boolean): Int", "member" : "Red.InputPanel.shifted", "link" : "Red\/InputPanel$.html#shifted(char:Int,shifted:Boolean):Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Red\/InputPanel$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Red\/InputPanel$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Red\/InputPanel$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Red\/InputPanel$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Red\/InputPanel$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Red\/InputPanel$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Red\/InputPanel$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Red\/InputPanel$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Red\/InputPanel$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Red\/InputPanel$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Red\/InputPanel$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Red\/InputPanel$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Red\/InputPanel$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Red\/InputPanel$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Red\/InputPanel$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Red\/InputPanel$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/InputPanel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/InputPanel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/InputPanel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/InputPanel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/InputPanel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/InputPanel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/InputPanel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/InputPanel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/InputPanel$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/InputPanel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/InputPanel$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/InputPanel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/InputPanel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/InputPanel$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/InputPanel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/InputPanel$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/InputPanel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/InputPanel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/InputPanel.html", "kind" : "class"}, {"name" : "Red.Instruction", "shortDescription" : "A keystroke deemed to be an action was typed.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "Red.Instruction.toString", "link" : "Red\/Instruction.html#toString():String", "kind" : "def"}, {"member" : "Red.Instruction#<init>", "error" : "unsupported entity"}, {"label" : "mods", "tail" : ": Detail", "member" : "Red.Instruction.mods", "link" : "Red\/Instruction.html#mods:Red.UserInputDetail.Detail", "kind" : "val"}, {"label" : "location", "tail" : ": scala.swing.event.Key.Location.Value", "member" : "Red.Instruction.location", "link" : "Red\/Instruction.html#location:scala.swing.event.Key.Location.Value", "kind" : "val"}, {"label" : "key", "tail" : ": scala.swing.event.Key.Value", "member" : "Red.Instruction.key", "link" : "Red\/Instruction.html#key:scala.swing.event.Key.Value", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/Instruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Instruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Instruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Instruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Instruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Instruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Instruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Instruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Instruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Instruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Instruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Instruction.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Instruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Instruction.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Instruction.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Instruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Instruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/Instruction.html", "kind" : "case class"}, {"name" : "Red.MouseDragged", "shortDescription" : "The mouse was dragged (ie moved with one of its buttons down)at (row,col) of the model being viewed by the component.", "members_case class" : [{"member" : "Red.MouseDragged#<init>", "error" : "unsupported entity"}, {"label" : "mods", "tail" : ": Detail", "member" : "Red.MouseDragged.mods", "link" : "Red\/MouseDragged.html#mods:Red.UserInputDetail.Detail", "kind" : "val"}, {"label" : "col", "tail" : ": Int", "member" : "Red.MouseDragged.col", "link" : "Red\/MouseDragged.html#col:Int", "kind" : "val"}, {"label" : "row", "tail" : ": Int", "member" : "Red.MouseDragged.row", "link" : "Red\/MouseDragged.html#row:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/MouseDragged.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/MouseDragged.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/MouseDragged.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/MouseDragged.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/MouseDragged.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/MouseDragged.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/MouseDragged.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseDragged.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseDragged.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseDragged.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/MouseDragged.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/MouseDragged.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/MouseDragged.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/MouseDragged.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/MouseDragged.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/MouseDragged.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/MouseDragged.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/MouseDragged.html", "kind" : "case class"}, {"name" : "Red.MouseEntered", "case object" : "Red\/MouseEntered$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/MouseEntered$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "Red\/MouseEntered$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/MouseEntered$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/MouseEntered$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/MouseEntered$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/MouseEntered$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/MouseEntered$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/MouseEntered$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseEntered$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseEntered$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseEntered$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/MouseEntered$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/MouseEntered$.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/MouseEntered$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/MouseEntered$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/MouseEntered$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/MouseEntered$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/MouseEntered$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/MouseEntered$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "Red.MouseExited", "case object" : "Red\/MouseExited$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/MouseExited$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "Red\/MouseExited$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/MouseExited$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/MouseExited$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/MouseExited$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/MouseExited$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/MouseExited$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/MouseExited$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseExited$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseExited$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseExited$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/MouseExited$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/MouseExited$.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/MouseExited$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/MouseExited$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/MouseExited$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/MouseExited$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/MouseExited$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/MouseExited$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "Red.MousePressed", "shortDescription" : "A mouse key was pressed count times  at (row,col) of themodel being viewed by the component.", "members_case class" : [{"member" : "Red.MousePressed#<init>", "error" : "unsupported entity"}, {"label" : "mods", "tail" : ": Detail", "member" : "Red.MousePressed.mods", "link" : "Red\/MousePressed.html#mods:Red.UserInputDetail.Detail", "kind" : "val"}, {"label" : "count", "tail" : ": Int", "member" : "Red.MousePressed.count", "link" : "Red\/MousePressed.html#count:Int", "kind" : "val"}, {"label" : "col", "tail" : ": Int", "member" : "Red.MousePressed.col", "link" : "Red\/MousePressed.html#col:Int", "kind" : "val"}, {"label" : "row", "tail" : ": Int", "member" : "Red.MousePressed.row", "link" : "Red\/MousePressed.html#row:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/MousePressed.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/MousePressed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/MousePressed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/MousePressed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/MousePressed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/MousePressed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/MousePressed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MousePressed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MousePressed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MousePressed.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/MousePressed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/MousePressed.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/MousePressed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/MousePressed.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/MousePressed.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/MousePressed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/MousePressed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/MousePressed.html", "kind" : "case class"}, {"name" : "Red.MouseReleased", "shortDescription" : " A mouse key was released in  at (row,col) of the model being viewed by the component.", "members_case class" : [{"member" : "Red.MouseReleased#<init>", "error" : "unsupported entity"}, {"label" : "mods", "tail" : ": Detail", "member" : "Red.MouseReleased.mods", "link" : "Red\/MouseReleased.html#mods:Red.UserInputDetail.Detail", "kind" : "val"}, {"label" : "col", "tail" : ": Int", "member" : "Red.MouseReleased.col", "link" : "Red\/MouseReleased.html#col:Int", "kind" : "val"}, {"label" : "row", "tail" : ": Int", "member" : "Red.MouseReleased.row", "link" : "Red\/MouseReleased.html#row:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/MouseReleased.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/MouseReleased.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/MouseReleased.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/MouseReleased.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/MouseReleased.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/MouseReleased.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/MouseReleased.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseReleased.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseReleased.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseReleased.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/MouseReleased.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/MouseReleased.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/MouseReleased.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/MouseReleased.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/MouseReleased.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/MouseReleased.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/MouseReleased.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/MouseReleased.html", "kind" : "case class"}, {"name" : "Red.MouseWheel", "shortDescription" : "The mouse wheel was turned by rotation clicks.", "members_case class" : [{"member" : "Red.MouseWheel#<init>", "error" : "unsupported entity"}, {"label" : "Detail", "tail" : ": Int", "member" : "Red.MouseWheel.Detail", "link" : "Red\/MouseWheel.html#Detail:Int", "kind" : "val"}, {"label" : "rotation", "tail" : ": Int", "member" : "Red.MouseWheel.rotation", "link" : "Red\/MouseWheel.html#rotation:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/MouseWheel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/MouseWheel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/MouseWheel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/MouseWheel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/MouseWheel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/MouseWheel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/MouseWheel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseWheel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseWheel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/MouseWheel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/MouseWheel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/MouseWheel.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/MouseWheel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/MouseWheel.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/MouseWheel.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/MouseWheel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/MouseWheel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/MouseWheel.html", "kind" : "case class"}, {"name" : "Red.Notifier", "shortDescription" : " Subject\/Observer infrastructure.", "object" : "Red\/Notifier$.html", "members_class" : [{"label" : "handleOnce", "tail" : "(tag: AnyRef)(handler: Handler[Event])(body: => Unit): Unit", "member" : "Red.Notifier.handleOnce", "link" : "Red\/Notifier.html#handleOnce(tag:AnyRef)(handler:Red.Notifier.Handler[Event])(body:=>Unit):Unit", "kind" : "def"}, {"label" : "disableResources", "tail" : "(): Unit", "member" : "Red.Notifier.disableResources", "link" : "Red\/Notifier.html#disableResources():Unit", "kind" : "def"}, {"label" : "enableResources", "tail" : "(): Unit", "member" : "Red.Notifier.enableResources", "link" : "Red\/Notifier.html#enableResources():Unit", "kind" : "def"}, {"label" : "removeTagged", "tail" : "(tag: AnyRef): Unit", "member" : "Red.Notifier.removeTagged", "link" : "Red\/Notifier.html#removeTagged(tag:AnyRef):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Red.Notifier.toString", "link" : "Red\/Notifier.html#toString():String", "kind" : "def"}, {"label" : "countTagged", "tail" : "(tag: AnyRef): Int", "member" : "Red.Notifier.countTagged", "link" : "Red\/Notifier.html#countTagged(tag:AnyRef):Int", "kind" : "def"}, {"label" : "handleWith", "tail" : "(handler: Handler[Event]): Unit", "member" : "Red.Notifier.handleWith", "link" : "Red\/Notifier.html#handleWith(handler:Red.Notifier.Handler[Event]):Unit", "kind" : "def"}, {"label" : "handleWithTagged", "tail" : "(tag: AnyRef)(handler: Handler[Event]): Unit", "member" : "Red.Notifier.handleWithTagged", "link" : "Red\/Notifier.html#handleWithTagged(tag:AnyRef)(handler:Red.Notifier.Handler[Event]):Unit", "kind" : "def"}, {"label" : "allHandled", "tail" : "(event: Event): Boolean", "member" : "Red.Notifier.allHandled", "link" : "Red\/Notifier.html#allHandled(event:Event):Boolean", "kind" : "def"}, {"label" : "anyHandled", "tail" : "(event: Event): Boolean", "member" : "Red.Notifier.anyHandled", "link" : "Red\/Notifier.html#anyHandled(event:Event):Boolean", "kind" : "def"}, {"label" : "notify", "tail" : "(event: Event): Unit", "member" : "Red.Notifier.notify", "link" : "Red\/Notifier.html#notify(event:Event):Unit", "kind" : "def"}, {"member" : "Red.Notifier#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Notifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Notifier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Notifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Notifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Notifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Notifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Notifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Notifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Notifier.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Notifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Notifier.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/Notifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Notifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Notifier.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/Notifier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Notifier.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Notifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Notifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "reportUnhandled", "tail" : "(): Unit", "member" : "Red.Notifier.reportUnhandled", "link" : "Red\/Notifier$.html#reportUnhandled():Unit", "kind" : "def"}, {"label" : "ignoreUnhandled", "tail" : "(): Unit", "member" : "Red.Notifier.ignoreUnhandled", "link" : "Red\/Notifier$.html#ignoreUnhandled():Unit", "kind" : "def"}, {"label" : "stackTraceUnhandled", "tail" : "(): Unit", "member" : "Red.Notifier.stackTraceUnhandled", "link" : "Red\/Notifier$.html#stackTraceUnhandled():Unit", "kind" : "def"}, {"label" : "exceptionUnhandled", "tail" : "(): Unit", "member" : "Red.Notifier.exceptionUnhandled", "link" : "Red\/Notifier$.html#exceptionUnhandled():Unit", "kind" : "def"}, {"label" : "Handler", "tail" : "(handler: Handler[Event]): Handler[Event]", "member" : "Red.Notifier.Handler", "link" : "Red\/Notifier$.html#Handler[Event](handler:Red.Notifier.Handler[Event]):Red.Notifier.Handler[Event]", "kind" : "def"}, {"label" : "Handler", "tail" : "", "member" : "Red.Notifier.Handler", "link" : "Red\/Notifier$.html#Handler[Event]=PartialFunction[Event,Unit]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Notifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Notifier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Notifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Notifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Notifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Notifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Notifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Notifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Notifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/Notifier$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Notifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Notifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/Notifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Notifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Notifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/Notifier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Notifier$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Notifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Notifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/Notifier.html", "kind" : "class"}, {"name" : "Red.SelectionChanged", "shortDescription" : "The position of the mark changed, thereby changing the selection.", "members_case class" : [{"member" : "Red.SelectionChanged#<init>", "error" : "unsupported entity"}, {"label" : "cursorCol", "tail" : ": Int", "member" : "Red.SelectionChanged.cursorCol", "link" : "Red\/SelectionChanged.html#cursorCol:Int", "kind" : "val"}, {"label" : "cursorRow", "tail" : ": Int", "member" : "Red.SelectionChanged.cursorRow", "link" : "Red\/SelectionChanged.html#cursorRow:Int", "kind" : "val"}, {"label" : "selectionSize", "tail" : ": Int", "member" : "Red.SelectionChanged.selectionSize", "link" : "Red\/SelectionChanged.html#selectionSize:Int", "kind" : "val"}, {"label" : "markCol", "tail" : ": Int", "member" : "Red.SelectionChanged.markCol", "link" : "Red\/SelectionChanged.html#markCol:Int", "kind" : "val"}, {"label" : "markRow", "tail" : ": Int", "member" : "Red.SelectionChanged.markRow", "link" : "Red\/SelectionChanged.html#markRow:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "Red\/SelectionChanged.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/SelectionChanged.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/SelectionChanged.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/SelectionChanged.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/SelectionChanged.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/SelectionChanged.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/SelectionChanged.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/SelectionChanged.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/SelectionChanged.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/SelectionChanged.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/SelectionChanged.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/SelectionChanged.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/SelectionChanged.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/SelectionChanged.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/SelectionChanged.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/SelectionChanged.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/SelectionChanged.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "Red\/SelectionChanged.html", "kind" : "case class"}, {"name" : "Red.Separator", "shortDescription" : "A bar that can be used a separator, most commonlyfor use in menus.", "members_class" : [{"label" : "SuperMixin", "tail" : "", "member" : "scala.swing.Component.SuperMixin", "link" : "Red\/Separator.html#SuperMixinextendsJComponent", "kind" : "trait"}, {"member" : "Red.Separator#<init>", "error" : "unsupported entity"}, {"label" : "peer", "tail" : ": JSeparator", "member" : "Red.Separator.peer", "link" : "Red\/Separator.html#peer:javax.swing.JSeparator", "kind" : "lazy val"}, {"member" : "Red.Separator#<init>", "error" : "unsupported entity"}, {"label" : "orientation", "tail" : "(): scala.swing.Orientation.Value", "member" : "scala.swing.Oriented.Wrapper.orientation", "link" : "Red\/Separator.html#orientation:scala.swing.Orientation.Value", "kind" : "def"}, {"label" : "OrientedMixin", "tail" : "", "member" : "scala.swing.Oriented.Wrapper.OrientedMixin", "link" : "Red\/Separator.html#OrientedMixin=AnyRef{defgetOrientation():Int;defsetOrientation(n:Int):Unit}", "kind" : "type"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.swing.Component.toString", "link" : "Red\/Separator.html#toString():String", "kind" : "def"}, {"label" : "paint", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paint", "link" : "Red\/Separator.html#paint(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintChildren", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintChildren", "link" : "Red\/Separator.html#paintChildren(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintBorder", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintBorder", "link" : "Red\/Separator.html#paintBorder(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "paintComponent", "tail" : "(g: Graphics2D): Unit", "member" : "scala.swing.Component.paintComponent", "link" : "Red\/Separator.html#paintComponent(g:scala.swing.Graphics2D):Unit", "kind" : "def"}, {"label" : "revalidate", "tail" : "(): Unit", "member" : "scala.swing.Component.revalidate", "link" : "Red\/Separator.html#revalidate():Unit", "kind" : "def"}, {"label" : "onFirstSubscribe", "tail" : "(): Unit", "member" : "scala.swing.Component.onFirstSubscribe", "link" : "Red\/Separator.html#onFirstSubscribe():Unit", "kind" : "def"}, {"label" : "hasFocus", "tail" : "(): Boolean", "member" : "scala.swing.Component.hasFocus", "link" : "Red\/Separator.html#hasFocus:Boolean", "kind" : "def"}, {"label" : "requestFocusInWindow", "tail" : "(): Boolean", "member" : "scala.swing.Component.requestFocusInWindow", "link" : "Red\/Separator.html#requestFocusInWindow():Boolean", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scala.swing.Component.requestFocus", "link" : "Red\/Separator.html#requestFocus():Unit", "kind" : "def"}, {"label" : "focusable_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.focusable_=", "link" : "Red\/Separator.html#focusable_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "focusable", "tail" : "(): Boolean", "member" : "scala.swing.Component.focusable", "link" : "Red\/Separator.html#focusable:Boolean", "kind" : "def"}, {"label" : "inputVerifier_=", "tail" : "(v: (Component) => Boolean): Unit", "member" : "scala.swing.Component.inputVerifier_=", "link" : "Red\/Separator.html#inputVerifier_=(v:scala.swing.Component=>Boolean):Unit", "kind" : "def"}, {"label" : "inputVerifier", "tail" : "(): (Component) => Boolean", "member" : "scala.swing.Component.inputVerifier", "link" : "Red\/Separator.html#inputVerifier:scala.swing.Component=>Boolean", "kind" : "def"}, {"label" : "tooltip_=", "tail" : "(t: String): Unit", "member" : "scala.swing.Component.tooltip_=", "link" : "Red\/Separator.html#tooltip_=(t:String):Unit", "kind" : "def"}, {"label" : "tooltip", "tail" : "(): String", "member" : "scala.swing.Component.tooltip", "link" : "Red\/Separator.html#tooltip:String", "kind" : "def"}, {"label" : "enabled_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.enabled_=", "link" : "Red\/Separator.html#enabled_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "enabled", "tail" : "(): Boolean", "member" : "scala.swing.Component.enabled", "link" : "Red\/Separator.html#enabled:Boolean", "kind" : "def"}, {"label" : "opaque_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.Component.opaque_=", "link" : "Red\/Separator.html#opaque_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "opaque", "tail" : "(): Boolean", "member" : "scala.swing.Component.opaque", "link" : "Red\/Separator.html#opaque:Boolean", "kind" : "def"}, {"label" : "border_=", "tail" : "(b: Border): Unit", "member" : "scala.swing.Component.border_=", "link" : "Red\/Separator.html#border_=(b:javax.swing.border.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): Border", "member" : "scala.swing.Component.border", "link" : "Red\/Separator.html#border:javax.swing.border.Border", "kind" : "def"}, {"label" : "yLayoutAlignment_=", "tail" : "(y: Double): Unit", "member" : "scala.swing.Component.yLayoutAlignment_=", "link" : "Red\/Separator.html#yLayoutAlignment_=(y:Double):Unit", "kind" : "def"}, {"label" : "yLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.yLayoutAlignment", "link" : "Red\/Separator.html#yLayoutAlignment:Double", "kind" : "def"}, {"label" : "xLayoutAlignment_=", "tail" : "(x: Double): Unit", "member" : "scala.swing.Component.xLayoutAlignment_=", "link" : "Red\/Separator.html#xLayoutAlignment_=(x:Double):Unit", "kind" : "def"}, {"label" : "xLayoutAlignment", "tail" : "(): Double", "member" : "scala.swing.Component.xLayoutAlignment", "link" : "Red\/Separator.html#xLayoutAlignment:Double", "kind" : "def"}, {"label" : "name_=", "tail" : "(s: String): Unit", "member" : "scala.swing.Component.name_=", "link" : "Red\/Separator.html#name_=(s:String):Unit", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.swing.Component.name", "link" : "Red\/Separator.html#name:String", "kind" : "def"}, {"label" : "onLastUnsubscribe", "tail" : "(): Unit", "member" : "scala.swing.UIElement.onLastUnsubscribe", "link" : "Red\/Separator.html#onLastUnsubscribe():Unit", "kind" : "def"}, {"label" : "ignoreRepaint_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.ignoreRepaint_=", "link" : "Red\/Separator.html#ignoreRepaint_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "ignoreRepaint", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.ignoreRepaint", "link" : "Red\/Separator.html#ignoreRepaint:Boolean", "kind" : "def"}, {"label" : "repaint", "tail" : "(rect: Rectangle): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Red\/Separator.html#repaint(rect:scala.swing.Rectangle):Unit", "kind" : "def"}, {"label" : "repaint", "tail" : "(): Unit", "member" : "scala.swing.UIElement.repaint", "link" : "Red\/Separator.html#repaint():Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(): Unit", "member" : "scala.swing.UIElement.validate", "link" : "Red\/Separator.html#validate():Unit", "kind" : "def"}, {"label" : "displayable", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.displayable", "link" : "Red\/Separator.html#displayable:Boolean", "kind" : "def"}, {"label" : "showing", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.showing", "link" : "Red\/Separator.html#showing:Boolean", "kind" : "def"}, {"label" : "visible_=", "tail" : "(b: Boolean): Unit", "member" : "scala.swing.UIElement.visible_=", "link" : "Red\/Separator.html#visible_=(b:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): Boolean", "member" : "scala.swing.UIElement.visible", "link" : "Red\/Separator.html#visible:Boolean", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(c: Cursor): Unit", "member" : "scala.swing.UIElement.cursor_=", "link" : "Red\/Separator.html#cursor_=(c:java.awt.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Cursor", "member" : "scala.swing.UIElement.cursor", "link" : "Red\/Separator.html#cursor:java.awt.Cursor", "kind" : "def"}, {"label" : "toolkit", "tail" : "(): Toolkit", "member" : "scala.swing.UIElement.toolkit", "link" : "Red\/Separator.html#toolkit:java.awt.Toolkit", "kind" : "def"}, {"label" : "locale", "tail" : "(): Locale", "member" : "scala.swing.UIElement.locale", "link" : "Red\/Separator.html#locale:java.util.Locale", "kind" : "def"}, {"label" : "size", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.size", "link" : "Red\/Separator.html#size:scala.swing.Dimension", "kind" : "def"}, {"label" : "bounds", "tail" : "(): Rectangle", "member" : "scala.swing.UIElement.bounds", "link" : "Red\/Separator.html#bounds:scala.swing.Rectangle", "kind" : "def"}, {"label" : "location", "tail" : "(): Point", "member" : "scala.swing.UIElement.location", "link" : "Red\/Separator.html#location:scala.swing.Point", "kind" : "def"}, {"label" : "locationOnScreen", "tail" : "(): Point", "member" : "scala.swing.UIElement.locationOnScreen", "link" : "Red\/Separator.html#locationOnScreen:scala.swing.Point", "kind" : "def"}, {"label" : "font_=", "tail" : "(f: Font): Unit", "member" : "scala.swing.UIElement.font_=", "link" : "Red\/Separator.html#font_=(f:scala.swing.Font):Unit", "kind" : "def"}, {"label" : "font", "tail" : "(): Font", "member" : "scala.swing.UIElement.font", "link" : "Red\/Separator.html#font:scala.swing.Font", "kind" : "def"}, {"label" : "componentOrientation_=", "tail" : "(x: ComponentOrientation): Unit", "member" : "scala.swing.UIElement.componentOrientation_=", "link" : "Red\/Separator.html#componentOrientation_=(x:java.awt.ComponentOrientation):Unit", "kind" : "def"}, {"label" : "componentOrientation", "tail" : "(): ComponentOrientation", "member" : "scala.swing.UIElement.componentOrientation", "link" : "Red\/Separator.html#componentOrientation:java.awt.ComponentOrientation", "kind" : "def"}, {"label" : "preferredSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.preferredSize_=", "link" : "Red\/Separator.html#preferredSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "preferredSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.preferredSize", "link" : "Red\/Separator.html#preferredSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "maximumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.maximumSize_=", "link" : "Red\/Separator.html#maximumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "maximumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.maximumSize", "link" : "Red\/Separator.html#maximumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "minimumSize_=", "tail" : "(x: Dimension): Unit", "member" : "scala.swing.UIElement.minimumSize_=", "link" : "Red\/Separator.html#minimumSize_=(x:scala.swing.Dimension):Unit", "kind" : "def"}, {"label" : "minimumSize", "tail" : "(): Dimension", "member" : "scala.swing.UIElement.minimumSize", "link" : "Red\/Separator.html#minimumSize:scala.swing.Dimension", "kind" : "def"}, {"label" : "background_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.background_=", "link" : "Red\/Separator.html#background_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): Color", "member" : "scala.swing.UIElement.background", "link" : "Red\/Separator.html#background:scala.swing.Color", "kind" : "def"}, {"label" : "foreground_=", "tail" : "(c: Color): Unit", "member" : "scala.swing.UIElement.foreground_=", "link" : "Red\/Separator.html#foreground_=(c:scala.swing.Color):Unit", "kind" : "def"}, {"label" : "foreground", "tail" : "(): Color", "member" : "scala.swing.UIElement.foreground", "link" : "Red\/Separator.html#foreground:scala.swing.Color", "kind" : "def"}, {"label" : "self", "tail" : "(): Any", "member" : "scala.swing.UIElement.self", "link" : "Red\/Separator.html#self:Any", "kind" : "def"}, {"label" : "unsubscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.unsubscribe", "link" : "Red\/Separator.html#unsubscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "subscribe", "tail" : "(listener: Reaction): Unit", "member" : "scala.swing.LazyPublisher.subscribe", "link" : "Red\/Separator.html#subscribe(listener:scala.swing.Reactions.Reaction):Unit", "kind" : "def"}, {"label" : "publish", "tail" : "(e: Event): Unit", "member" : "scala.swing.Publisher.publish", "link" : "Red\/Separator.html#publish(e:scala.swing.event.Event):Unit", "kind" : "def"}, {"label" : "listeners", "tail" : ": RefSet[Reaction]", "member" : "scala.swing.Publisher.listeners", "link" : "Red\/Separator.html#listeners:scala.swing.RefSet[scala.swing.Reactions.Reaction]", "kind" : "val"}, {"label" : "deafTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.deafTo", "link" : "Red\/Separator.html#deafTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(ps: Publisher*): Unit", "member" : "scala.swing.Reactor.listenTo", "link" : "Red\/Separator.html#listenTo(ps:scala.swing.Publisher*):Unit", "kind" : "def"}, {"label" : "reactions", "tail" : ": Reactions", "member" : "scala.swing.Reactor.reactions", "link" : "Red\/Separator.html#reactions:scala.swing.Reactions", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.Proxy.equals", "link" : "Red\/Separator.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Proxy.hashCode", "link" : "Red\/Separator.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Separator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Separator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Separator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Separator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Separator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Separator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Separator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Separator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Separator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Separator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Separator.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Separator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Separator.html#finalize():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Separator.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Separator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Separator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/Separator.html", "kind" : "class"}, {"name" : "Red.Sequence", "shortDescription" : "An extensible editable sequence of elements", "object" : "Red\/Sequence$.html", "members_class" : [{"label" : "repString", "tail" : "(): String", "member" : "Red.Sequence.repString", "link" : "Red\/Sequence.html#repString:String", "kind" : "def"}, {"label" : "asString", "tail" : "(): String", "member" : "Red.Sequence.asString", "link" : "Red\/Sequence.html#asString:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Red.Sequence.toString", "link" : "Red\/Sequence.html#toString():String", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "Red.Sequence.iterator", "link" : "Red\/Sequence.html#iterator:Iterator[T]", "kind" : "def"}, {"label" : "prepend", "tail" : "(elt: T): Unit", "member" : "Red.Sequence.prepend", "link" : "Red\/Sequence.html#prepend(elt:T):Unit", "kind" : "def"}, {"label" : "append", "tail" : "(elt: T): Unit", "member" : "Red.Sequence.append", "link" : "Red\/Sequence.html#append(elt:T):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(n: Int, elt: T): Unit", "member" : "Red.Sequence.update", "link" : "Red\/Sequence.html#update(n:Int,elt:T):Unit", "kind" : "def"}, {"label" : "elements", "tail" : "(n: Int): T", "member" : "Red.Sequence.elements", "link" : "Red\/Sequence.html#elements(n:Int):T", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): T", "member" : "Red.Sequence.apply", "link" : "Red\/Sequence.html#apply(n:Int):T", "kind" : "def"}, {"label" : "delete", "tail" : "(position: Int, count: Int): Unit", "member" : "Red.Sequence.delete", "link" : "Red\/Sequence.html#delete(position:Int,count:Int):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, elts: Iterable[T]): Unit", "member" : "Red.Sequence.insert", "link" : "Red\/Sequence.html#insert(position:Int,elts:Iterable[T]):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, elt: T, count: Int): Unit", "member" : "Red.Sequence.insert", "link" : "Red\/Sequence.html#insert(position:Int,elt:T,count:Int):Unit", "kind" : "def"}, {"label" : "moveGapTo", "tail" : "(position: Int): Unit", "member" : "Red.Sequence.moveGapTo", "link" : "Red\/Sequence.html#moveGapTo(position:Int):Unit", "kind" : "def"}, {"label" : "ensureFits", "tail" : "(size: Int): Unit", "member" : "Red.Sequence.ensureFits", "link" : "Red\/Sequence.html#ensureFits(size:Int):Unit", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "Red.Sequence.clear", "link" : "Red\/Sequence.html#clear():Unit", "kind" : "def"}, {"member" : "Red.Sequence#<init>", "error" : "unsupported entity"}, {"label" : "gapSize", "tail" : "(): Int", "member" : "Red.Sequence.gapSize", "link" : "Red\/Sequence.html#gapSize:Int", "kind" : "def"}, {"label" : "length", "tail" : ": Int", "member" : "Red.Sequence.length", "link" : "Red\/Sequence.html#length:Int", "kind" : "var"}, {"label" : "className", "tail" : "(): String", "member" : "Red.Sequence.className", "link" : "Red\/Sequence.html#className:String", "kind" : "def"}, {"label" : "r", "tail" : ": Int", "member" : "Red.Sequence.r", "link" : "Red\/Sequence.html#r:Int", "kind" : "var"}, {"label" : "l", "tail" : ": Int", "member" : "Red.Sequence.l", "link" : "Red\/Sequence.html#l:Int", "kind" : "var"}, {"label" : "buffer", "tail" : ": Array[T]", "member" : "Red.Sequence.buffer", "link" : "Red\/Sequence.html#buffer:Array[T]", "kind" : "var"}, {"member" : "Red.Sequence#<init>", "error" : "unsupported entity"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[Seq]", "member" : "scala.collection.mutable.Seq.iterableFactory", "link" : "Red\/Sequence.html#iterableFactory:scala.collection.SeqFactory[scala.collection.mutable.Seq]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (T) => T): Sequence.this.type", "member" : "scala.collection.mutable.SeqOps.transform", "link" : "Red\/Sequence.html#transform(f:A=>A):SeqOps.this.type", "kind" : "final def"}, {"label" : "clone", "tail" : "(): Seq[T]", "member" : "scala.collection.mutable.SeqOps.clone", "link" : "Red\/Sequence.html#clone():C", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "Red\/Sequence.html#stringPrefix:String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "Red\/Sequence.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "Red\/Sequence.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Seq.canEqual", "link" : "Red\/Sequence.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "Red\/Sequence.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "Red\/Sequence.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "Red\/Sequence.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): Seq[B]", "member" : "scala.collection.SeqOps.updated", "link" : "Red\/Sequence.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Seq[B]", "member" : "scala.collection.SeqOps.patch", "link" : "Red\/Sequence.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Seq[T]", "member" : "scala.collection.SeqOps.intersect", "link" : "Red\/Sequence.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Seq[T]", "member" : "scala.collection.SeqOps.diff", "link" : "Red\/Sequence.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (T, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "Red\/Sequence.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "Red\/Sequence.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "Red\/Sequence.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "Red\/Sequence.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "Red\/Sequence.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "Red\/Sequence.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "Red\/Sequence.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "Red\/Sequence.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "Red\/Sequence.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (T) => B)(ord: Ordering[B]): Seq[T]", "member" : "scala.collection.SeqOps.sortBy", "link" : "Red\/Sequence.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (T, T) => Boolean): Seq[T]", "member" : "scala.collection.SeqOps.sortWith", "link" : "Red\/Sequence.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[T]", "member" : "scala.collection.SeqOps.sorted", "link" : "Red\/Sequence.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[T]]", "member" : "scala.collection.SeqOps.combinations", "link" : "Red\/Sequence.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[T]]", "member" : "scala.collection.SeqOps.permutations", "link" : "Red\/Sequence.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (T) => B): Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "Red\/Sequence.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "Red\/Sequence.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "Red\/Sequence.html#containsSlice[B>:A](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (T) => Boolean): Option[T]", "member" : "scala.collection.SeqOps.findLast", "link" : "Red\/Sequence.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "Red\/Sequence.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "Red\/Sequence.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "Red\/Sequence.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "Red\/Sequence.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "Red\/Sequence.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (T) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "Red\/Sequence.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "Red\/Sequence.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "Red\/Sequence.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "Red\/Sequence.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "Red\/Sequence.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "Red\/Sequence.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "Red\/Sequence.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (T) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "Red\/Sequence.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "Red\/Sequence.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Seq[B]", "member" : "scala.collection.SeqOps.padTo", "link" : "Red\/Sequence.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "Red\/Sequence.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "Red\/Sequence.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "Red\/Sequence.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "Red\/Sequence.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[T]", "member" : "scala.collection.SeqOps.reverse", "link" : "Red\/Sequence.html#reverse:C", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (T) => B): Seq[T]", "member" : "scala.collection.SeqOps.distinctBy", "link" : "Red\/Sequence.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[T]", "member" : "scala.collection.SeqOps.distinct", "link" : "Red\/Sequence.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "Red\/Sequence.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "Red\/Sequence.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "Red\/Sequence.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "Red\/Sequence.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.appendedAll", "link" : "Red\/Sequence.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "Red\/Sequence.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.prependedAll", "link" : "Red\/Sequence.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "Red\/Sequence.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "appended", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.appended", "link" : "Red\/Sequence.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "Red\/Sequence.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "prepended", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.prepended", "link" : "Red\/Sequence.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[T]", "member" : "scala.collection.SeqOps.view", "link" : "Red\/Sequence.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (T) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "Red\/Sequence.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "Red\/Sequence.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[T]", "member" : "scala.PartialFunction.lift", "link" : "Red\/Sequence.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, T]", "member" : "scala.PartialFunction.compose", "link" : "Red\/Sequence.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[T, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "Red\/Sequence.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (T) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "Red\/Sequence.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "Red\/Sequence.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, T]", "member" : "scala.PartialFunction.elementWise", "link" : "Red\/Sequence.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[T]", "member" : "scala.PartialFunction.unapply", "link" : "Red\/Sequence.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "Red\/Sequence.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[T, B, Sequence.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "Red\/Sequence.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "seq", "tail" : "(): Sequence.this.type", "member" : "scala.collection.Iterable.seq", "link" : "Red\/Sequence.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Sequence.this.type", "member" : "scala.collection.Iterable.coll", "link" : "Red\/Sequence.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Sequence.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "Red\/Sequence.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Seq[T]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "Red\/Sequence.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[T, Seq[T]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "Red\/Sequence.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[T]): Seq[T]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "Red\/Sequence.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (T) => U): Seq[T]", "member" : "scala.collection.IterableOps.tapEach", "link" : "Red\/Sequence.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[T]]", "member" : "scala.collection.IterableOps.inits", "link" : "Red\/Sequence.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[T]]", "member" : "scala.collection.IterableOps.tails", "link" : "Red\/Sequence.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (T) => (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "Red\/Sequence.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (T) => (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "Red\/Sequence.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "Red\/Sequence.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Seq[(T, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "Red\/Sequence.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Seq[(T, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "Red\/Sequence.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "Red\/Sequence.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "partitionMap", "tail" : "(f: (T) => Either[A1, A2]): (Seq[A1], Seq[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "Red\/Sequence.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Seq[B]", "member" : "scala.collection.IterableOps.collect", "link" : "Red\/Sequence.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (T) => IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "Red\/Sequence.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) => IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "Red\/Sequence.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) => B): Seq[B]", "member" : "scala.collection.IterableOps.map", "link" : "Red\/Sequence.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) => B): Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "Red\/Sequence.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) => B): Seq[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "Red\/Sequence.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "Red\/Sequence.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (T) => K)(f: (T) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "Red\/Sequence.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (T) => K)(f: (T) => B): Map[K, Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "Red\/Sequence.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (T) => K): Map[K, Seq[T]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "Red\/Sequence.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[T]", "member" : "scala.collection.IterableOps.slice", "link" : "Red\/Sequence.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[T]", "member" : "scala.collection.IterableOps.init", "link" : "Red\/Sequence.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[T]", "member" : "scala.collection.IterableOps.tail", "link" : "Red\/Sequence.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[T]]", "member" : "scala.collection.IterableOps.sliding", "link" : "Red\/Sequence.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[T]]", "member" : "scala.collection.IterableOps.sliding", "link" : "Red\/Sequence.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[T]]", "member" : "scala.collection.IterableOps.grouped", "link" : "Red\/Sequence.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) => Boolean): Seq[T]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "Red\/Sequence.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[T]", "member" : "scala.collection.IterableOps.dropRight", "link" : "Red\/Sequence.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[T]", "member" : "scala.collection.IterableOps.drop", "link" : "Red\/Sequence.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) => Boolean): (Seq[T], Seq[T])", "member" : "scala.collection.IterableOps.span", "link" : "Red\/Sequence.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) => Boolean): Seq[T]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "Red\/Sequence.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[T]", "member" : "scala.collection.IterableOps.takeRight", "link" : "Red\/Sequence.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[T]", "member" : "scala.collection.IterableOps.take", "link" : "Red\/Sequence.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[T], Seq[T])", "member" : "scala.collection.IterableOps.splitAt", "link" : "Red\/Sequence.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) => Boolean): (Seq[T], Seq[T])", "member" : "scala.collection.IterableOps.partition", "link" : "Red\/Sequence.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) => Boolean): WithFilter[T, [_]Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "Red\/Sequence.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (T) => Boolean): Seq[T]", "member" : "scala.collection.IterableOps.filterNot", "link" : "Red\/Sequence.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (T) => Boolean): Seq[T]", "member" : "scala.collection.IterableOps.filter", "link" : "Red\/Sequence.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (T) => Iterable[B]): Seq[Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "Red\/Sequence.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[T]", "member" : "scala.collection.IterableOps.view", "link" : "Red\/Sequence.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "Red\/Sequence.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "scala.collection.IterableOps.lastOption", "link" : "Red\/Sequence.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): T", "member" : "scala.collection.IterableOps.last", "link" : "Red\/Sequence.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "scala.collection.IterableOps.headOption", "link" : "Red\/Sequence.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): T", "member" : "scala.collection.IterableOps.head", "link" : "Red\/Sequence.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "Red\/Sequence.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Seq[T]", "member" : "scala.collection.IterableOps.repr", "link" : "Red\/Sequence.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "Red\/Sequence.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "Red\/Sequence.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[T]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "Red\/Sequence.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "Red\/Sequence.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "Red\/Sequence.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "Red\/Sequence.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "Red\/Sequence.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "Red\/Sequence.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "Red\/Sequence.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "Red\/Sequence.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "Red\/Sequence.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "Red\/Sequence.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "Red\/Sequence.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[T, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "Red\/Sequence.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/Sequence.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/Sequence.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/Sequence.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/Sequence.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/Sequence.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/Sequence.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (T, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "Red\/Sequence.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, T) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "Red\/Sequence.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "Red\/Sequence.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (T) => B)(cmp: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "Red\/Sequence.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) => B)(cmp: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "Red\/Sequence.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (T) => B)(cmp: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "Red\/Sequence.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) => B)(cmp: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "Red\/Sequence.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "Red\/Sequence.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.max", "link" : "Red\/Sequence.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "Red\/Sequence.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.min", "link" : "Red\/Sequence.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "Red\/Sequence.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "Red\/Sequence.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/Sequence.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/Sequence.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/Sequence.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "Red\/Sequence.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "Red\/Sequence.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "Red\/Sequence.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "Red\/Sequence.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "Red\/Sequence.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "Red\/Sequence.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "Red\/Sequence.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "Red\/Sequence.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "Red\/Sequence.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "Red\/Sequence.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "Red\/Sequence.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "Red\/Sequence.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "Red\/Sequence.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) => Boolean): Option[T]", "member" : "scala.collection.IterableOnceOps.find", "link" : "Red\/Sequence.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "Red\/Sequence.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "Red\/Sequence.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "Red\/Sequence.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "Red\/Sequence.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "Red\/Sequence.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "Red\/Sequence.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[T, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "Red\/Sequence.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Sequence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Sequence.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Sequence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Sequence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Sequence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Sequence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Sequence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Sequence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Sequence.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Sequence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Sequence.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Sequence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Sequence.html#finalize():Unit", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Sequence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Sequence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Red\/Sequence$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Red\/Sequence$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Red\/Sequence$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Red\/Sequence$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Red\/Sequence$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Red\/Sequence$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Red\/Sequence$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Red\/Sequence$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Red\/Sequence$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Red\/Sequence$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Red\/Sequence$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Red\/Sequence$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Red\/Sequence$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Red\/Sequence$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Red\/Sequence$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Red\/Sequence$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Sequence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Sequence$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Sequence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Sequence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Sequence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Sequence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Sequence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Sequence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Sequence$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Sequence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Sequence$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/Sequence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Sequence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Sequence$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/Sequence$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Sequence$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Sequence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Sequence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/Sequence.html", "kind" : "class"}, {"name" : "Red.Session", "trait" : "Red\/Session.html", "kind" : "trait", "members_trait" : [{"label" : "handleOnce", "tail" : "(tag: AnyRef)(handler: Handler[DocumentEvent])(body: => Unit): Unit", "member" : "Red.Notifier.handleOnce", "link" : "Red\/Session.html#handleOnce(tag:AnyRef)(handler:Red.Notifier.Handler[Event])(body:=>Unit):Unit", "kind" : "def"}, {"label" : "disableResources", "tail" : "(): Unit", "member" : "Red.Notifier.disableResources", "link" : "Red\/Session.html#disableResources():Unit", "kind" : "def"}, {"label" : "enableResources", "tail" : "(): Unit", "member" : "Red.Notifier.enableResources", "link" : "Red\/Session.html#enableResources():Unit", "kind" : "def"}, {"label" : "removeTagged", "tail" : "(tag: AnyRef): Unit", "member" : "Red.Notifier.removeTagged", "link" : "Red\/Session.html#removeTagged(tag:AnyRef):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Red.Notifier.toString", "link" : "Red\/Session.html#toString():String", "kind" : "def"}, {"label" : "countTagged", "tail" : "(tag: AnyRef): Int", "member" : "Red.Notifier.countTagged", "link" : "Red\/Session.html#countTagged(tag:AnyRef):Int", "kind" : "def"}, {"label" : "handleWith", "tail" : "(handler: Handler[DocumentEvent]): Unit", "member" : "Red.Notifier.handleWith", "link" : "Red\/Session.html#handleWith(handler:Red.Notifier.Handler[Event]):Unit", "kind" : "def"}, {"label" : "handleWithTagged", "tail" : "(tag: AnyRef)(handler: Handler[DocumentEvent]): Unit", "member" : "Red.Notifier.handleWithTagged", "link" : "Red\/Session.html#handleWithTagged(tag:AnyRef)(handler:Red.Notifier.Handler[Event]):Unit", "kind" : "def"}, {"label" : "allHandled", "tail" : "(event: DocumentEvent): Boolean", "member" : "Red.Notifier.allHandled", "link" : "Red\/Session.html#allHandled(event:Event):Boolean", "kind" : "def"}, {"label" : "anyHandled", "tail" : "(event: DocumentEvent): Boolean", "member" : "Red.Notifier.anyHandled", "link" : "Red\/Session.html#anyHandled(event:Event):Boolean", "kind" : "def"}, {"label" : "notify", "tail" : "(event: DocumentEvent): Unit", "member" : "Red.Notifier.notify", "link" : "Red\/Session.html#notify(event:Event):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/Session.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/Session.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/Session.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/Session.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/Session.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/Session.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Session.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Session.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/Session.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/Session.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/Session.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/Session.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/Session.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/Session.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/Session.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/Session.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/Session.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/Session.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "document", "tail" : ": DocumentInterface", "member" : "Red.Session.document", "link" : "Red\/Session.html#document:Red.DocumentInterface", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "Red.SystemClipboard", "shortDescription" : "SystemClipboard provides access to the system Clipboard.", "object" : "Red\/SystemClipboard$.html", "members_object" : [{"label" : "get", "tail" : "(): Option[String]", "member" : "Red.SystemClipboard.get", "link" : "Red\/SystemClipboard$.html#get:Option[String]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(default: String): String", "member" : "Red.SystemClipboard.getOrElse", "link" : "Red\/SystemClipboard$.html#getOrElse(default:String):String", "kind" : "def"}, {"label" : "set", "tail" : "(text: String): Unit", "member" : "Red.SystemClipboard.set", "link" : "Red\/SystemClipboard$.html#set(text:String):Unit", "kind" : "def"}, {"label" : "unicodeText", "tail" : ": DataFlavor", "member" : "Red.SystemClipboard.unicodeText", "link" : "Red\/SystemClipboard$.html#unicodeText:java.awt.datatransfer.DataFlavor", "kind" : "val"}, {"label" : "sysClip", "tail" : ": Clipboard", "member" : "Red.SystemClipboard.sysClip", "link" : "Red\/SystemClipboard$.html#sysClip:java.awt.datatransfer.Clipboard", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Red\/SystemClipboard$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Red\/SystemClipboard$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Red\/SystemClipboard$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Red\/SystemClipboard$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Red\/SystemClipboard$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Red\/SystemClipboard$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Red\/SystemClipboard$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Red\/SystemClipboard$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Red\/SystemClipboard$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Red\/SystemClipboard$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Red\/SystemClipboard$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Red\/SystemClipboard$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Red\/SystemClipboard$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Red\/SystemClipboard$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Red\/SystemClipboard$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Red\/SystemClipboard$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/SystemClipboard$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/SystemClipboard$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/SystemClipboard$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/SystemClipboard$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/SystemClipboard$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/SystemClipboard$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/SystemClipboard$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/SystemClipboard$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/SystemClipboard$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/SystemClipboard$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/SystemClipboard$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/SystemClipboard$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/SystemClipboard$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/SystemClipboard$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/SystemClipboard$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/SystemClipboard$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/SystemClipboard$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/SystemClipboard$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Red.TextBuffer", "shortDescription" : "An extensible editable character sequence", "object" : "Red\/TextBuffer$.html", "members_class" : [{"label" : "asString", "tail" : "(): String", "member" : "Red.TextBuffer.asString", "link" : "Red\/TextBuffer.html#asString:String", "kind" : "def"}, {"label" : "repString", "tail" : "(): String", "member" : "Red.TextBuffer.repString", "link" : "Red\/TextBuffer.html#repString:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Red.TextBuffer.toString", "link" : "Red\/TextBuffer.html#toString():String", "kind" : "def"}, {"label" : "subSequence", "tail" : "(start: Int, end: Int): String", "member" : "Red.TextBuffer.subSequence", "link" : "Red\/TextBuffer.html#subSequence(start:Int,end:Int):String", "kind" : "def"}, {"label" : "charAt", "tail" : "(n: Int): Char", "member" : "Red.TextBuffer.charAt", "link" : "Red\/TextBuffer.html#charAt(n:Int):Char", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "Red.TextBuffer.isEmpty", "link" : "Red\/TextBuffer.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "writeTo", "tail" : "(out: BufferedWriter, shorten: Int): Unit", "member" : "Red.TextBuffer.writeTo", "link" : "Red\/TextBuffer.html#writeTo(out:java.io.BufferedWriter,shorten:Int):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, source: Reader): Unit", "member" : "Red.TextBuffer.insert", "link" : "Red\/TextBuffer.html#insert(position:Int,source:java.io.Reader):Unit", "kind" : "def"}, {"label" : "chars", "tail" : "(i: Int): Char", "member" : "Red.TextBuffer.chars", "link" : "Red\/TextBuffer.html#chars(i:Int):Char", "kind" : "def"}, {"member" : "Red.TextBuffer#<init>", "error" : "unsupported entity"}, {"member" : "Red.TextBuffer#<init>", "error" : "unsupported entity"}, {"label" : "codePoints", "tail" : "(): IntStream", "member" : "java.lang.CharSequence.codePoints", "link" : "Red\/TextBuffer.html#codePoints():java.util.stream.IntStream", "kind" : "def"}, {"label" : "chars", "tail" : "(): IntStream", "member" : "java.lang.CharSequence.chars", "link" : "Red\/TextBuffer.html#chars():java.util.stream.IntStream", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Char]", "member" : "Red.Sequence.iterator", "link" : "Red\/TextBuffer.html#iterator:Iterator[T]", "kind" : "def"}, {"label" : "prepend", "tail" : "(elt: Char): Unit", "member" : "Red.Sequence.prepend", "link" : "Red\/TextBuffer.html#prepend(elt:T):Unit", "kind" : "def"}, {"label" : "append", "tail" : "(elt: Char): Unit", "member" : "Red.Sequence.append", "link" : "Red\/TextBuffer.html#append(elt:T):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(n: Int, elt: Char): Unit", "member" : "Red.Sequence.update", "link" : "Red\/TextBuffer.html#update(n:Int,elt:T):Unit", "kind" : "def"}, {"label" : "elements", "tail" : "(n: Int): Char", "member" : "Red.Sequence.elements", "link" : "Red\/TextBuffer.html#elements(n:Int):T", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): Char", "member" : "Red.Sequence.apply", "link" : "Red\/TextBuffer.html#apply(n:Int):T", "kind" : "def"}, {"label" : "delete", "tail" : "(position: Int, count: Int): Unit", "member" : "Red.Sequence.delete", "link" : "Red\/TextBuffer.html#delete(position:Int,count:Int):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, elts: Iterable[Char]): Unit", "member" : "Red.Sequence.insert", "link" : "Red\/TextBuffer.html#insert(position:Int,elts:Iterable[T]):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, elt: Char, count: Int): Unit", "member" : "Red.Sequence.insert", "link" : "Red\/TextBuffer.html#insert(position:Int,elt:T,count:Int):Unit", "kind" : "def"}, {"label" : "moveGapTo", "tail" : "(position: Int): Unit", "member" : "Red.Sequence.moveGapTo", "link" : "Red\/TextBuffer.html#moveGapTo(position:Int):Unit", "kind" : "def"}, {"label" : "ensureFits", "tail" : "(size: Int): Unit", "member" : "Red.Sequence.ensureFits", "link" : "Red\/TextBuffer.html#ensureFits(size:Int):Unit", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "Red.Sequence.clear", "link" : "Red\/TextBuffer.html#clear():Unit", "kind" : "def"}, {"label" : "gapSize", "tail" : "(): Int", "member" : "Red.Sequence.gapSize", "link" : "Red\/TextBuffer.html#gapSize:Int", "kind" : "def"}, {"label" : "length", "tail" : ": Int", "member" : "Red.Sequence.length", "link" : "Red\/TextBuffer.html#length:Int", "kind" : "var"}, {"label" : "className", "tail" : "(): String", "member" : "Red.Sequence.className", "link" : "Red\/TextBuffer.html#className:String", "kind" : "def"}, {"label" : "r", "tail" : ": Int", "member" : "Red.Sequence.r", "link" : "Red\/TextBuffer.html#r:Int", "kind" : "var"}, {"label" : "l", "tail" : ": Int", "member" : "Red.Sequence.l", "link" : "Red\/TextBuffer.html#l:Int", "kind" : "var"}, {"label" : "buffer", "tail" : ": Array[Char]", "member" : "Red.Sequence.buffer", "link" : "Red\/TextBuffer.html#buffer:Array[T]", "kind" : "var"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[Seq]", "member" : "scala.collection.mutable.Seq.iterableFactory", "link" : "Red\/TextBuffer.html#iterableFactory:scala.collection.SeqFactory[scala.collection.mutable.Seq]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Char) => Char): TextBuffer.this.type", "member" : "scala.collection.mutable.SeqOps.transform", "link" : "Red\/TextBuffer.html#transform(f:A=>A):SeqOps.this.type", "kind" : "final def"}, {"label" : "clone", "tail" : "(): Seq[Char]", "member" : "scala.collection.mutable.SeqOps.clone", "link" : "Red\/TextBuffer.html#clone():C", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "Red\/TextBuffer.html#stringPrefix:String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "Red\/TextBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "Red\/TextBuffer.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Seq.canEqual", "link" : "Red\/TextBuffer.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "Red\/TextBuffer.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "Red\/TextBuffer.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "Red\/TextBuffer.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): Seq[B]", "member" : "scala.collection.SeqOps.updated", "link" : "Red\/TextBuffer.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Seq[B]", "member" : "scala.collection.SeqOps.patch", "link" : "Red\/TextBuffer.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Seq[Char]", "member" : "scala.collection.SeqOps.intersect", "link" : "Red\/TextBuffer.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Seq[Char]", "member" : "scala.collection.SeqOps.diff", "link" : "Red\/TextBuffer.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (Char, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "Red\/TextBuffer.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "Red\/TextBuffer.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "Red\/TextBuffer.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "Red\/TextBuffer.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "Red\/TextBuffer.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "Red\/TextBuffer.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "Red\/TextBuffer.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "Red\/TextBuffer.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Char) => B)(ord: Ordering[B]): Seq[Char]", "member" : "scala.collection.SeqOps.sortBy", "link" : "Red\/TextBuffer.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Char, Char) => Boolean): Seq[Char]", "member" : "scala.collection.SeqOps.sortWith", "link" : "Red\/TextBuffer.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Char]", "member" : "scala.collection.SeqOps.sorted", "link" : "Red\/TextBuffer.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Char]]", "member" : "scala.collection.SeqOps.combinations", "link" : "Red\/TextBuffer.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Char]]", "member" : "scala.collection.SeqOps.permutations", "link" : "Red\/TextBuffer.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Char) => B): Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "Red\/TextBuffer.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "Red\/TextBuffer.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "Red\/TextBuffer.html#containsSlice[B>:A](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Char) => Boolean): Option[Char]", "member" : "scala.collection.SeqOps.findLast", "link" : "Red\/TextBuffer.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "Red\/TextBuffer.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "Red\/TextBuffer.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "Red\/TextBuffer.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "Red\/TextBuffer.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Char) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "Red\/TextBuffer.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Char) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "Red\/TextBuffer.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "Red\/TextBuffer.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "Red\/TextBuffer.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "Red\/TextBuffer.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Char) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "Red\/TextBuffer.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Char) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "Red\/TextBuffer.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Char) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "Red\/TextBuffer.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Char) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "Red\/TextBuffer.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Char) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "Red\/TextBuffer.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Seq[B]", "member" : "scala.collection.SeqOps.padTo", "link" : "Red\/TextBuffer.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "Red\/TextBuffer.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "Red\/TextBuffer.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "Red\/TextBuffer.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Char]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "Red\/TextBuffer.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Char]", "member" : "scala.collection.SeqOps.reverse", "link" : "Red\/TextBuffer.html#reverse:C", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Char) => B): Seq[Char]", "member" : "scala.collection.SeqOps.distinctBy", "link" : "Red\/TextBuffer.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Char]", "member" : "scala.collection.SeqOps.distinct", "link" : "Red\/TextBuffer.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "Red\/TextBuffer.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "Red\/TextBuffer.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "Red\/TextBuffer.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "Red\/TextBuffer.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.appendedAll", "link" : "Red\/TextBuffer.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "Red\/TextBuffer.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.prependedAll", "link" : "Red\/TextBuffer.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "Red\/TextBuffer.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "appended", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.appended", "link" : "Red\/TextBuffer.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "Red\/TextBuffer.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "prepended", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.prepended", "link" : "Red\/TextBuffer.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Char]", "member" : "scala.collection.SeqOps.view", "link" : "Red\/TextBuffer.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Char) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "Red\/TextBuffer.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "Red\/TextBuffer.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Char]", "member" : "scala.PartialFunction.lift", "link" : "Red\/TextBuffer.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Char]", "member" : "scala.PartialFunction.compose", "link" : "Red\/TextBuffer.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Char, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "Red\/TextBuffer.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Char) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "Red\/TextBuffer.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "Red\/TextBuffer.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Char]", "member" : "scala.PartialFunction.elementWise", "link" : "Red\/TextBuffer.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Char]", "member" : "scala.PartialFunction.unapply", "link" : "Red\/TextBuffer.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Char", "member" : "scala.Function1.compose", "link" : "Red\/TextBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[Char, B, TextBuffer.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "Red\/TextBuffer.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "seq", "tail" : "(): TextBuffer.this.type", "member" : "scala.collection.Iterable.seq", "link" : "Red\/TextBuffer.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): TextBuffer.this.type", "member" : "scala.collection.Iterable.coll", "link" : "Red\/TextBuffer.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): TextBuffer.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "Red\/TextBuffer.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Seq[Char]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "Red\/TextBuffer.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Char, Seq[Char]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "Red\/TextBuffer.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[Char]): Seq[Char]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "Red\/TextBuffer.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Char) => U): Seq[Char]", "member" : "scala.collection.IterableOps.tapEach", "link" : "Red\/TextBuffer.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Char]]", "member" : "scala.collection.IterableOps.inits", "link" : "Red\/TextBuffer.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Char]]", "member" : "scala.collection.IterableOps.tails", "link" : "Red\/TextBuffer.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Char) => (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "Red\/TextBuffer.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Char) => (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "Red\/TextBuffer.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "Red\/TextBuffer.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Seq[(Char, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "Red\/TextBuffer.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Seq[(Char, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "Red\/TextBuffer.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "Red\/TextBuffer.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "partitionMap", "tail" : "(f: (Char) => Either[A1, A2]): (Seq[A1], Seq[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "Red\/TextBuffer.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Char, B]): Seq[B]", "member" : "scala.collection.IterableOps.collect", "link" : "Red\/TextBuffer.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (Char) => IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "Red\/TextBuffer.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Char) => IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "Red\/TextBuffer.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Char) => B): Seq[B]", "member" : "scala.collection.IterableOps.map", "link" : "Red\/TextBuffer.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Char, B) => B): Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "Red\/TextBuffer.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Char) => B): Seq[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "Red\/TextBuffer.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "Red\/TextBuffer.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Char) => K)(f: (Char) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "Red\/TextBuffer.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Char) => K)(f: (Char) => B): Map[K, Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "Red\/TextBuffer.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Char) => K): Map[K, Seq[Char]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "Red\/TextBuffer.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Char]", "member" : "scala.collection.IterableOps.slice", "link" : "Red\/TextBuffer.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Char]", "member" : "scala.collection.IterableOps.init", "link" : "Red\/TextBuffer.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Char]", "member" : "scala.collection.IterableOps.tail", "link" : "Red\/TextBuffer.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Char]]", "member" : "scala.collection.IterableOps.sliding", "link" : "Red\/TextBuffer.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Char]]", "member" : "scala.collection.IterableOps.sliding", "link" : "Red\/TextBuffer.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Char]]", "member" : "scala.collection.IterableOps.grouped", "link" : "Red\/TextBuffer.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Char) => Boolean): Seq[Char]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "Red\/TextBuffer.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Char]", "member" : "scala.collection.IterableOps.dropRight", "link" : "Red\/TextBuffer.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Char]", "member" : "scala.collection.IterableOps.drop", "link" : "Red\/TextBuffer.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Char) => Boolean): (Seq[Char], Seq[Char])", "member" : "scala.collection.IterableOps.span", "link" : "Red\/TextBuffer.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Char) => Boolean): Seq[Char]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "Red\/TextBuffer.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Char]", "member" : "scala.collection.IterableOps.takeRight", "link" : "Red\/TextBuffer.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Char]", "member" : "scala.collection.IterableOps.take", "link" : "Red\/TextBuffer.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Char], Seq[Char])", "member" : "scala.collection.IterableOps.splitAt", "link" : "Red\/TextBuffer.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Char) => Boolean): (Seq[Char], Seq[Char])", "member" : "scala.collection.IterableOps.partition", "link" : "Red\/TextBuffer.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Char) => Boolean): WithFilter[Char, [_]Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "Red\/TextBuffer.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Char) => Boolean): Seq[Char]", "member" : "scala.collection.IterableOps.filterNot", "link" : "Red\/TextBuffer.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Char) => Boolean): Seq[Char]", "member" : "scala.collection.IterableOps.filter", "link" : "Red\/TextBuffer.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Char) => Iterable[B]): Seq[Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "Red\/TextBuffer.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Char]", "member" : "scala.collection.IterableOps.view", "link" : "Red\/TextBuffer.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "Red\/TextBuffer.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Char]", "member" : "scala.collection.IterableOps.lastOption", "link" : "Red\/TextBuffer.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Char", "member" : "scala.collection.IterableOps.last", "link" : "Red\/TextBuffer.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Char]", "member" : "scala.collection.IterableOps.headOption", "link" : "Red\/TextBuffer.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Char", "member" : "scala.collection.IterableOps.head", "link" : "Red\/TextBuffer.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "Red\/TextBuffer.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Seq[Char]", "member" : "scala.collection.IterableOps.repr", "link" : "Red\/TextBuffer.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "Red\/TextBuffer.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Char]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "Red\/TextBuffer.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Char]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "Red\/TextBuffer.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "Red\/TextBuffer.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "Red\/TextBuffer.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Char]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "Red\/TextBuffer.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Char]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "Red\/TextBuffer.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Char]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "Red\/TextBuffer.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "Red\/TextBuffer.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Char, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "Red\/TextBuffer.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Char]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "Red\/TextBuffer.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Char]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "Red\/TextBuffer.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Char]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "Red\/TextBuffer.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Char, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "Red\/TextBuffer.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/TextBuffer.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/TextBuffer.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/TextBuffer.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/TextBuffer.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/TextBuffer.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/TextBuffer.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Char, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "Red\/TextBuffer.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Char) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "Red\/TextBuffer.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Char, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "Red\/TextBuffer.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Char) => B)(cmp: Ordering[B]): Option[Char]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "Red\/TextBuffer.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Char) => B)(cmp: Ordering[B]): Char", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "Red\/TextBuffer.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Char) => B)(cmp: Ordering[B]): Option[Char]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "Red\/TextBuffer.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Char) => B)(cmp: Ordering[B]): Char", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "Red\/TextBuffer.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Char]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "Red\/TextBuffer.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Char", "member" : "scala.collection.IterableOnceOps.max", "link" : "Red\/TextBuffer.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Char]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "Red\/TextBuffer.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Char", "member" : "scala.collection.IterableOnceOps.min", "link" : "Red\/TextBuffer.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "Red\/TextBuffer.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "Red\/TextBuffer.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/TextBuffer.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/TextBuffer.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/TextBuffer.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "Red\/TextBuffer.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "Red\/TextBuffer.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Char, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "Red\/TextBuffer.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Char) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "Red\/TextBuffer.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Char, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "Red\/TextBuffer.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Char) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "Red\/TextBuffer.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "Red\/TextBuffer.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "Red\/TextBuffer.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "Red\/TextBuffer.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Char, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "Red\/TextBuffer.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Char) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "Red\/TextBuffer.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Char, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "Red\/TextBuffer.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Char) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "Red\/TextBuffer.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Char) => Boolean): Option[Char]", "member" : "scala.collection.IterableOnceOps.find", "link" : "Red\/TextBuffer.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Char) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "Red\/TextBuffer.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Char) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "Red\/TextBuffer.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Char) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "Red\/TextBuffer.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Char) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "Red\/TextBuffer.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "Red\/TextBuffer.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "Red\/TextBuffer.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Char, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "Red\/TextBuffer.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/TextBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/TextBuffer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/TextBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/TextBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/TextBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/TextBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/TextBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/TextBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/TextBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/TextBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/TextBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/TextBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "END", "tail" : ": Char", "member" : "Red.TextBuffer.END", "link" : "Red\/TextBuffer$.html#END:Char", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/TextBuffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/TextBuffer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/TextBuffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/TextBuffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/TextBuffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/TextBuffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBuffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBuffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBuffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/TextBuffer$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/TextBuffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/TextBuffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/TextBuffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/TextBuffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/TextBuffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/TextBuffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/TextBuffer$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/TextBuffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/TextBuffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/TextBuffer.html", "kind" : "class"}, {"name" : "Red.TextBufferIndex", "shortDescription" : " A sequence of integers interpreted as the lengths of successive lines in a sequence (characters) of characters terminated by END.", "object" : "Red\/TextBufferIndex$.html", "members_class" : [{"label" : "sumTo", "tail" : "(line: Int): Int", "member" : "Red.TextBufferIndex.sumTo", "link" : "Red\/TextBufferIndex.html#sumTo(line:Int):Int", "kind" : "def"}, {"label" : "sameLine", "tail" : "(pos1: Int, pos2: Int): Boolean", "member" : "Red.TextBufferIndex.sameLine", "link" : "Red\/TextBufferIndex.html#sameLine(pos1:Int,pos2:Int):Boolean", "kind" : "def"}, {"label" : "getStartAndLength", "tail" : "(line: Int): (Int, Int)", "member" : "Red.TextBufferIndex.getStartAndLength", "link" : "Red\/TextBufferIndex.html#getStartAndLength(line:Int):(Int,Int)", "kind" : "def"}, {"label" : "coordinatesToPosition", "tail" : "(row: Int, col: Int): Int", "member" : "Red.TextBufferIndex.coordinatesToPosition", "link" : "Red\/TextBufferIndex.html#coordinatesToPosition(row:Int,col:Int):Int", "kind" : "def"}, {"label" : "positionToCoordinates", "tail" : "(position: Int): (Int, Int)", "member" : "Red.TextBufferIndex.positionToCoordinates", "link" : "Red\/TextBufferIndex.html#positionToCoordinates(position:Int):(Int,Int)", "kind" : "def"}, {"label" : "getCol", "tail" : "(position: Int): Int", "member" : "Red.TextBufferIndex.getCol", "link" : "Red\/TextBufferIndex.html#getCol(position:Int):Int", "kind" : "def"}, {"label" : "getRow", "tail" : "(position: Int): Int", "member" : "Red.TextBufferIndex.getRow", "link" : "Red\/TextBufferIndex.html#getRow(position:Int):Int", "kind" : "def"}, {"label" : "buildFrom", "tail" : "(text: CharSequence): Unit", "member" : "Red.TextBufferIndex.buildFrom", "link" : "Red\/TextBufferIndex.html#buildFrom(text:CharSequence):Unit", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "Red.TextBufferIndex.clear", "link" : "Red\/TextBufferIndex.html#clear():Unit", "kind" : "def"}, {"label" : "lineLength", "tail" : "(line: Int): Int", "member" : "Red.TextBufferIndex.lineLength", "link" : "Red\/TextBufferIndex.html#lineLength(line:Int):Int", "kind" : "def"}, {"label" : "currentStart", "tail" : ": Int", "member" : "Red.TextBufferIndex.currentStart", "link" : "Red\/TextBufferIndex.html#currentStart:Int", "kind" : "var"}, {"label" : "currentLine", "tail" : ": Int", "member" : "Red.TextBufferIndex.currentLine", "link" : "Red\/TextBufferIndex.html#currentLine:Int", "kind" : "var"}, {"member" : "Red.TextBufferIndex#<init>", "error" : "unsupported entity"}, {"member" : "Red.TextBufferIndex#<init>", "error" : "unsupported entity"}, {"label" : "repString", "tail" : "(): String", "member" : "Red.Sequence.repString", "link" : "Red\/TextBufferIndex.html#repString:String", "kind" : "def"}, {"label" : "asString", "tail" : "(): String", "member" : "Red.Sequence.asString", "link" : "Red\/TextBufferIndex.html#asString:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "Red.Sequence.toString", "link" : "Red\/TextBufferIndex.html#toString():String", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Int]", "member" : "Red.Sequence.iterator", "link" : "Red\/TextBufferIndex.html#iterator:Iterator[T]", "kind" : "def"}, {"label" : "prepend", "tail" : "(elt: Int): Unit", "member" : "Red.Sequence.prepend", "link" : "Red\/TextBufferIndex.html#prepend(elt:T):Unit", "kind" : "def"}, {"label" : "append", "tail" : "(elt: Int): Unit", "member" : "Red.Sequence.append", "link" : "Red\/TextBufferIndex.html#append(elt:T):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(n: Int, elt: Int): Unit", "member" : "Red.Sequence.update", "link" : "Red\/TextBufferIndex.html#update(n:Int,elt:T):Unit", "kind" : "def"}, {"label" : "elements", "tail" : "(n: Int): Int", "member" : "Red.Sequence.elements", "link" : "Red\/TextBufferIndex.html#elements(n:Int):T", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): Int", "member" : "Red.Sequence.apply", "link" : "Red\/TextBufferIndex.html#apply(n:Int):T", "kind" : "def"}, {"label" : "delete", "tail" : "(position: Int, count: Int): Unit", "member" : "Red.Sequence.delete", "link" : "Red\/TextBufferIndex.html#delete(position:Int,count:Int):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, elts: Iterable[Int]): Unit", "member" : "Red.Sequence.insert", "link" : "Red\/TextBufferIndex.html#insert(position:Int,elts:Iterable[T]):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(position: Int, elt: Int, count: Int): Unit", "member" : "Red.Sequence.insert", "link" : "Red\/TextBufferIndex.html#insert(position:Int,elt:T,count:Int):Unit", "kind" : "def"}, {"label" : "moveGapTo", "tail" : "(position: Int): Unit", "member" : "Red.Sequence.moveGapTo", "link" : "Red\/TextBufferIndex.html#moveGapTo(position:Int):Unit", "kind" : "def"}, {"label" : "ensureFits", "tail" : "(size: Int): Unit", "member" : "Red.Sequence.ensureFits", "link" : "Red\/TextBufferIndex.html#ensureFits(size:Int):Unit", "kind" : "def"}, {"label" : "gapSize", "tail" : "(): Int", "member" : "Red.Sequence.gapSize", "link" : "Red\/TextBufferIndex.html#gapSize:Int", "kind" : "def"}, {"label" : "length", "tail" : ": Int", "member" : "Red.Sequence.length", "link" : "Red\/TextBufferIndex.html#length:Int", "kind" : "var"}, {"label" : "className", "tail" : "(): String", "member" : "Red.Sequence.className", "link" : "Red\/TextBufferIndex.html#className:String", "kind" : "def"}, {"label" : "r", "tail" : ": Int", "member" : "Red.Sequence.r", "link" : "Red\/TextBufferIndex.html#r:Int", "kind" : "var"}, {"label" : "l", "tail" : ": Int", "member" : "Red.Sequence.l", "link" : "Red\/TextBufferIndex.html#l:Int", "kind" : "var"}, {"label" : "buffer", "tail" : ": Array[Int]", "member" : "Red.Sequence.buffer", "link" : "Red\/TextBufferIndex.html#buffer:Array[T]", "kind" : "var"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[Seq]", "member" : "scala.collection.mutable.Seq.iterableFactory", "link" : "Red\/TextBufferIndex.html#iterableFactory:scala.collection.SeqFactory[scala.collection.mutable.Seq]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Int) => Int): TextBufferIndex.this.type", "member" : "scala.collection.mutable.SeqOps.transform", "link" : "Red\/TextBufferIndex.html#transform(f:A=>A):SeqOps.this.type", "kind" : "final def"}, {"label" : "clone", "tail" : "(): Seq[Int]", "member" : "scala.collection.mutable.SeqOps.clone", "link" : "Red\/TextBufferIndex.html#clone():C", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "Red\/TextBufferIndex.html#stringPrefix:String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "Red\/TextBufferIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "Red\/TextBufferIndex.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Seq.canEqual", "link" : "Red\/TextBufferIndex.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "Red\/TextBufferIndex.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "Red\/TextBufferIndex.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "Red\/TextBufferIndex.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): Seq[B]", "member" : "scala.collection.SeqOps.updated", "link" : "Red\/TextBufferIndex.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Seq[B]", "member" : "scala.collection.SeqOps.patch", "link" : "Red\/TextBufferIndex.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Seq[Int]", "member" : "scala.collection.SeqOps.intersect", "link" : "Red\/TextBufferIndex.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Seq[Int]", "member" : "scala.collection.SeqOps.diff", "link" : "Red\/TextBufferIndex.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (Int, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "Red\/TextBufferIndex.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "Red\/TextBufferIndex.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "Red\/TextBufferIndex.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "Red\/TextBufferIndex.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "Red\/TextBufferIndex.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "Red\/TextBufferIndex.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "Red\/TextBufferIndex.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "Red\/TextBufferIndex.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "Red\/TextBufferIndex.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Int) => B)(ord: Ordering[B]): Seq[Int]", "member" : "scala.collection.SeqOps.sortBy", "link" : "Red\/TextBufferIndex.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Int, Int) => Boolean): Seq[Int]", "member" : "scala.collection.SeqOps.sortWith", "link" : "Red\/TextBufferIndex.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Seq[Int]", "member" : "scala.collection.SeqOps.sorted", "link" : "Red\/TextBufferIndex.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Seq[Int]]", "member" : "scala.collection.SeqOps.combinations", "link" : "Red\/TextBufferIndex.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Seq[Int]]", "member" : "scala.collection.SeqOps.permutations", "link" : "Red\/TextBufferIndex.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Int) => B): Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "Red\/TextBufferIndex.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "Red\/TextBufferIndex.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "Red\/TextBufferIndex.html#containsSlice[B>:A](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Int) => Boolean): Option[Int]", "member" : "scala.collection.SeqOps.findLast", "link" : "Red\/TextBufferIndex.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "Red\/TextBufferIndex.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "Red\/TextBufferIndex.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "Red\/TextBufferIndex.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "Red\/TextBufferIndex.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Int) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "Red\/TextBufferIndex.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Int) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "Red\/TextBufferIndex.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "Red\/TextBufferIndex.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "Red\/TextBufferIndex.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "Red\/TextBufferIndex.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Int) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "Red\/TextBufferIndex.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Int) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "Red\/TextBufferIndex.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Int) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "Red\/TextBufferIndex.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Int) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "Red\/TextBufferIndex.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Int) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "Red\/TextBufferIndex.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Seq[B]", "member" : "scala.collection.SeqOps.padTo", "link" : "Red\/TextBufferIndex.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "Red\/TextBufferIndex.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "Red\/TextBufferIndex.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "Red\/TextBufferIndex.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Int]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "Red\/TextBufferIndex.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Seq[Int]", "member" : "scala.collection.SeqOps.reverse", "link" : "Red\/TextBufferIndex.html#reverse:C", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Int) => B): Seq[Int]", "member" : "scala.collection.SeqOps.distinctBy", "link" : "Red\/TextBufferIndex.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Seq[Int]", "member" : "scala.collection.SeqOps.distinct", "link" : "Red\/TextBufferIndex.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "Red\/TextBufferIndex.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "Red\/TextBufferIndex.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "Red\/TextBufferIndex.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "Red\/TextBufferIndex.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.appendedAll", "link" : "Red\/TextBufferIndex.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "Red\/TextBufferIndex.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.SeqOps.prependedAll", "link" : "Red\/TextBufferIndex.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "Red\/TextBufferIndex.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "appended", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.appended", "link" : "Red\/TextBufferIndex.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "Red\/TextBufferIndex.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "prepended", "tail" : "(elem: B): Seq[B]", "member" : "scala.collection.SeqOps.prepended", "link" : "Red\/TextBufferIndex.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Int]", "member" : "scala.collection.SeqOps.view", "link" : "Red\/TextBufferIndex.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Int) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "Red\/TextBufferIndex.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "Red\/TextBufferIndex.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Int]", "member" : "scala.PartialFunction.lift", "link" : "Red\/TextBufferIndex.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Int]", "member" : "scala.PartialFunction.compose", "link" : "Red\/TextBufferIndex.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Int, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "Red\/TextBufferIndex.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Int) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "Red\/TextBufferIndex.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "Red\/TextBufferIndex.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Int]", "member" : "scala.PartialFunction.elementWise", "link" : "Red\/TextBufferIndex.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Int]", "member" : "scala.PartialFunction.unapply", "link" : "Red\/TextBufferIndex.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Int", "member" : "scala.Function1.compose", "link" : "Red\/TextBufferIndex.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[Int, B, TextBufferIndex.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "Red\/TextBufferIndex.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "seq", "tail" : "(): TextBufferIndex.this.type", "member" : "scala.collection.Iterable.seq", "link" : "Red\/TextBufferIndex.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): TextBufferIndex.this.type", "member" : "scala.collection.Iterable.coll", "link" : "Red\/TextBufferIndex.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): TextBufferIndex.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "Red\/TextBufferIndex.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Seq[Int]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "Red\/TextBufferIndex.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Int, Seq[Int]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "Red\/TextBufferIndex.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[Int]): Seq[Int]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "Red\/TextBufferIndex.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Int) => U): Seq[Int]", "member" : "scala.collection.IterableOps.tapEach", "link" : "Red\/TextBufferIndex.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Seq[Int]]", "member" : "scala.collection.IterableOps.inits", "link" : "Red\/TextBufferIndex.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Seq[Int]]", "member" : "scala.collection.IterableOps.tails", "link" : "Red\/TextBufferIndex.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Int) => (A1, A2, A3)): (Seq[A1], Seq[A2], Seq[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "Red\/TextBufferIndex.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Int) => (A1, A2)): (Seq[A1], Seq[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "Red\/TextBufferIndex.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "Red\/TextBufferIndex.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Seq[(Int, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "Red\/TextBufferIndex.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Seq[(Int, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "Red\/TextBufferIndex.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "Red\/TextBufferIndex.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "partitionMap", "tail" : "(f: (Int) => Either[A1, A2]): (Seq[A1], Seq[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "Red\/TextBufferIndex.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Int, B]): Seq[B]", "member" : "scala.collection.IterableOps.collect", "link" : "Red\/TextBufferIndex.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (Int) => IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "Red\/TextBufferIndex.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Int) => IterableOnce[B]): Seq[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "Red\/TextBufferIndex.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Int) => B): Seq[B]", "member" : "scala.collection.IterableOps.map", "link" : "Red\/TextBufferIndex.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Int, B) => B): Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "Red\/TextBufferIndex.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Int) => B): Seq[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "Red\/TextBufferIndex.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "Red\/TextBufferIndex.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Int) => K)(f: (Int) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "Red\/TextBufferIndex.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Int) => K)(f: (Int) => B): Map[K, Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "Red\/TextBufferIndex.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Int) => K): Map[K, Seq[Int]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "Red\/TextBufferIndex.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Seq[Int]", "member" : "scala.collection.IterableOps.slice", "link" : "Red\/TextBufferIndex.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Seq[Int]", "member" : "scala.collection.IterableOps.init", "link" : "Red\/TextBufferIndex.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Seq[Int]", "member" : "scala.collection.IterableOps.tail", "link" : "Red\/TextBufferIndex.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Seq[Int]]", "member" : "scala.collection.IterableOps.sliding", "link" : "Red\/TextBufferIndex.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Seq[Int]]", "member" : "scala.collection.IterableOps.sliding", "link" : "Red\/TextBufferIndex.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Seq[Int]]", "member" : "scala.collection.IterableOps.grouped", "link" : "Red\/TextBufferIndex.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Int) => Boolean): Seq[Int]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "Red\/TextBufferIndex.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Seq[Int]", "member" : "scala.collection.IterableOps.dropRight", "link" : "Red\/TextBufferIndex.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Seq[Int]", "member" : "scala.collection.IterableOps.drop", "link" : "Red\/TextBufferIndex.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Int) => Boolean): (Seq[Int], Seq[Int])", "member" : "scala.collection.IterableOps.span", "link" : "Red\/TextBufferIndex.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Int) => Boolean): Seq[Int]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "Red\/TextBufferIndex.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Seq[Int]", "member" : "scala.collection.IterableOps.takeRight", "link" : "Red\/TextBufferIndex.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Seq[Int]", "member" : "scala.collection.IterableOps.take", "link" : "Red\/TextBufferIndex.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Seq[Int], Seq[Int])", "member" : "scala.collection.IterableOps.splitAt", "link" : "Red\/TextBufferIndex.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Int) => Boolean): (Seq[Int], Seq[Int])", "member" : "scala.collection.IterableOps.partition", "link" : "Red\/TextBufferIndex.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Int) => Boolean): WithFilter[Int, [_]Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "Red\/TextBufferIndex.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Int) => Boolean): Seq[Int]", "member" : "scala.collection.IterableOps.filterNot", "link" : "Red\/TextBufferIndex.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Int) => Boolean): Seq[Int]", "member" : "scala.collection.IterableOps.filter", "link" : "Red\/TextBufferIndex.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Int) => Iterable[B]): Seq[Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "Red\/TextBufferIndex.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Int]", "member" : "scala.collection.IterableOps.view", "link" : "Red\/TextBufferIndex.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "Red\/TextBufferIndex.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Int]", "member" : "scala.collection.IterableOps.lastOption", "link" : "Red\/TextBufferIndex.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Int", "member" : "scala.collection.IterableOps.last", "link" : "Red\/TextBufferIndex.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Int]", "member" : "scala.collection.IterableOps.headOption", "link" : "Red\/TextBufferIndex.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Int", "member" : "scala.collection.IterableOps.head", "link" : "Red\/TextBufferIndex.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "Red\/TextBufferIndex.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Seq[Int]", "member" : "scala.collection.IterableOps.repr", "link" : "Red\/TextBufferIndex.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "Red\/TextBufferIndex.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Int]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "Red\/TextBufferIndex.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Int]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "Red\/TextBufferIndex.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "Red\/TextBufferIndex.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "Red\/TextBufferIndex.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Int]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "Red\/TextBufferIndex.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Int]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "Red\/TextBufferIndex.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Int]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "Red\/TextBufferIndex.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "Red\/TextBufferIndex.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Int, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "Red\/TextBufferIndex.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Int]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "Red\/TextBufferIndex.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Int]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "Red\/TextBufferIndex.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Int]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "Red\/TextBufferIndex.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Int, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "Red\/TextBufferIndex.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/TextBufferIndex.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/TextBufferIndex.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "Red\/TextBufferIndex.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/TextBufferIndex.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/TextBufferIndex.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "Red\/TextBufferIndex.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Int, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "Red\/TextBufferIndex.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Int) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "Red\/TextBufferIndex.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Int, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "Red\/TextBufferIndex.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Int) => B)(cmp: Ordering[B]): Option[Int]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "Red\/TextBufferIndex.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Int) => B)(cmp: Ordering[B]): Int", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "Red\/TextBufferIndex.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Int) => B)(cmp: Ordering[B]): Option[Int]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "Red\/TextBufferIndex.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Int) => B)(cmp: Ordering[B]): Int", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "Red\/TextBufferIndex.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Int]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "Red\/TextBufferIndex.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Int", "member" : "scala.collection.IterableOnceOps.max", "link" : "Red\/TextBufferIndex.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Int]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "Red\/TextBufferIndex.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Int", "member" : "scala.collection.IterableOnceOps.min", "link" : "Red\/TextBufferIndex.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "Red\/TextBufferIndex.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "Red\/TextBufferIndex.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/TextBufferIndex.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/TextBufferIndex.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "Red\/TextBufferIndex.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "Red\/TextBufferIndex.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "Red\/TextBufferIndex.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Int, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "Red\/TextBufferIndex.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Int) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "Red\/TextBufferIndex.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Int, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "Red\/TextBufferIndex.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Int) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "Red\/TextBufferIndex.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "Red\/TextBufferIndex.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "Red\/TextBufferIndex.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "Red\/TextBufferIndex.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Int, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "Red\/TextBufferIndex.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Int) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "Red\/TextBufferIndex.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Int, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "Red\/TextBufferIndex.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Int) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "Red\/TextBufferIndex.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Int) => Boolean): Option[Int]", "member" : "scala.collection.IterableOnceOps.find", "link" : "Red\/TextBufferIndex.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Int) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "Red\/TextBufferIndex.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Int) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "Red\/TextBufferIndex.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Int) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "Red\/TextBufferIndex.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Int) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "Red\/TextBufferIndex.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "Red\/TextBufferIndex.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "Red\/TextBufferIndex.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Int, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "Red\/TextBufferIndex.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/TextBufferIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/TextBufferIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/TextBufferIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/TextBufferIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/TextBufferIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/TextBufferIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBufferIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBufferIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBufferIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/TextBufferIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/TextBufferIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/TextBufferIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/TextBufferIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/TextBufferIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/TextBufferIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "Logging.Loggable.toString", "link" : "Red\/TextBufferIndex$.html#toString():String", "kind" : "def"}, {"label" : "log", "tail" : "(level: => Int, message: => String): Unit", "member" : "Logging.Loggable.log", "link" : "Red\/TextBufferIndex$.html#log(level:=>Int,message:=>String):Unit", "kind" : "def"}, {"label" : "fatal", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fatal", "link" : "Red\/TextBufferIndex$.html#fatal(message:=>String):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.error", "link" : "Red\/TextBufferIndex$.html#error(message:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.warn", "link" : "Red\/TextBufferIndex$.html#warn(message:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.info", "link" : "Red\/TextBufferIndex$.html#info(message:=>String):Unit", "kind" : "def"}, {"label" : "fine", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.fine", "link" : "Red\/TextBufferIndex$.html#fine(message:=>String):Unit", "kind" : "def"}, {"label" : "finer", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finer", "link" : "Red\/TextBufferIndex$.html#finer(message:=>String):Unit", "kind" : "def"}, {"label" : "finest", "tail" : "(message: => String): Unit", "member" : "Logging.Loggable.finest", "link" : "Red\/TextBufferIndex$.html#finest(message:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "Logging.Loggable.log", "link" : "Red\/TextBufferIndex$.html#log:Logging.package.Logger", "kind" : "val"}, {"label" : "logging", "tail" : ": Boolean", "member" : "Logging.Loggable.logging", "link" : "Red\/TextBufferIndex$.html#logging:Boolean", "kind" : "val"}, {"label" : "level", "tail" : "(): Int", "member" : "Logging.Loggable.level", "link" : "Red\/TextBufferIndex$.html#level:Int", "kind" : "def"}, {"label" : "level_=", "tail" : "(newLevel: Int): Unit", "member" : "Logging.Loggable.level_=", "link" : "Red\/TextBufferIndex$.html#level_=(newLevel:Int):Unit", "kind" : "def"}, {"label" : "initialLevel", "tail" : ": Int", "member" : "Logging.Loggable.initialLevel", "link" : "Red\/TextBufferIndex$.html#initialLevel:Int", "kind" : "val"}, {"label" : "classKey", "tail" : ": String", "member" : "Logging.Loggable.classKey", "link" : "Red\/TextBufferIndex$.html#classKey:String", "kind" : "val"}, {"label" : "className", "tail" : "(): String", "member" : "Logging.Loggable.className", "link" : "Red\/TextBufferIndex$.html#className:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/TextBufferIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/TextBufferIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/TextBufferIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/TextBufferIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/TextBufferIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/TextBufferIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBufferIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBufferIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/TextBufferIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/TextBufferIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/TextBufferIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/TextBufferIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/TextBufferIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/TextBufferIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/TextBufferIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/TextBufferIndex$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/TextBufferIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/TextBufferIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/TextBufferIndex.html", "kind" : "class"}, {"name" : "Red.UserInput", "shortDescription" : " Events generated from DocumentView and other components as a result of user interaction with keyboard and mouse.", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/UserInput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/UserInput.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/UserInput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/UserInput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/UserInput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/UserInput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInput.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/UserInput.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/UserInput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/UserInput.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/UserInput.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/UserInput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/UserInput.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/UserInput.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/UserInput.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/UserInput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/UserInput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "Red\/UserInput.html", "kind" : "class"}, {"name" : "Red.UserInputDetail", "shortDescription" : "A bag of tools to support the simple and intelligible decoding ofMouseButtonEvents and KeyEvents generated by the underlying platform, aswell as the UserInputDetails into which they are translated byInputPanels and their descendants.", "object" : "Red\/UserInputDetail$.html", "members_object" : [{"label" : "Location", "tail" : ": scala.swing.event.Key.Location.type", "member" : "Red.UserInputDetail.Location", "link" : "Red\/UserInputDetail$.html#Location:Red.UserInputDetail.Key.Location.type", "kind" : "val"}, {"label" : "Modifiers", "tail" : "", "member" : "Red.UserInputDetail.Modifiers", "link" : "Red\/UserInputDetail$.html#Modifiers", "kind" : "object"}, {"label" : "Key", "tail" : ": scala.swing.event.Key.type", "member" : "Red.UserInputDetail.Key", "link" : "Red\/UserInputDetail$.html#Key:swing.event.Key.type", "kind" : "val"}, {"label" : "Detail", "tail" : "", "member" : "Red.UserInputDetail.Detail", "link" : "Red\/UserInputDetail$.html#Detail", "kind" : "object"}, {"label" : "Detail", "tail" : "", "member" : "Red.UserInputDetail.Detail", "link" : "Red\/UserInputDetail$.html#DetailextendsAnyVal", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/UserInputDetail$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/UserInputDetail$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/UserInputDetail$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/UserInputDetail$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/UserInputDetail$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/UserInputDetail$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInputDetail$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInputDetail$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInputDetail$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/UserInputDetail$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/UserInputDetail$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/UserInputDetail$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/UserInputDetail$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/UserInputDetail$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/UserInputDetail$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/UserInputDetail$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/UserInputDetail$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/UserInputDetail$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/UserInputDetail$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "Red.UserInputHandlers", "shortDescription" : "", "object" : "Red\/UserInputHandlers$.html", "members_object" : [{"label" : "logAll", "tail" : "(title: String, log: Logger): UserInputHandler", "member" : "Red.UserInputHandlers.logAll", "link" : "Red\/UserInputHandlers$.html#logAll(title:String,log:Logging.Logger):Red.UserInputHandlers.UserInputHandler", "kind" : "def"}, {"label" : "onNewline", "tail" : "(act: => Unit): UserInputHandler", "member" : "Red.UserInputHandlers.onNewline", "link" : "Red\/UserInputHandlers$.html#onNewline(act:=>Unit):Red.UserInputHandlers.UserInputHandler", "kind" : "def"}, {"label" : "UserInputHandler", "tail" : "", "member" : "Red.UserInputHandlers.UserInputHandler", "link" : "Red\/UserInputHandlers$.html#UserInputHandler=Red.Notifier.Handler[Red.UserInput]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "Red\/UserInputHandlers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "Red\/UserInputHandlers$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "Red\/UserInputHandlers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "Red\/UserInputHandlers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "Red\/UserInputHandlers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "Red\/UserInputHandlers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInputHandlers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInputHandlers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "Red\/UserInputHandlers$.html#wait():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "Red\/UserInputHandlers$.html#toString():String", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "Red\/UserInputHandlers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "Red\/UserInputHandlers$.html#notify():Unit", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "Red\/UserInputHandlers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "Red\/UserInputHandlers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "Red\/UserInputHandlers$.html#finalize():Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "Red\/UserInputHandlers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "Red\/UserInputHandlers$.html#clone():Object", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "Red\/UserInputHandlers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "Red\/UserInputHandlers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};